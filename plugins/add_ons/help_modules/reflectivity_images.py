#----------------------------------------------------------------------
# This file was generated by /usr/lib/python2.6/dist-packages/wx-2.6-gtk2-unicode/wx/tools/img2py.py
#
from wx import ImageFromStream, BitmapFromImage
import cStringIO, zlib


def getinsert_stackData():
    return zlib.decompress(
'x\xda\x01\x89\x02v\xfd\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\
\x00\x00\x00\x10\x08\x06\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\
\x08\x08\x08|\x08d\x88\x00\x00\x02@IDAT8\x8d\xa5S=k\x14Q\x14=\xf7\xcd{3\x997\
3\x9b\xecG4D\xf0\x03\x154\x8dB\nca0"\xd8[Y\x08\n\x82\x9dE\xd0\xd2Jc\x11\xac\
\xecm\x04\x0b\x9b\x14~\xfc\x00\x83F!\x84\x80\x120+!\xae\xd9\r\x865f\xdd\xcd\
\xcenvv\xf6>\x8bD\\\xc9\x04\x0bos.\x1c\xeey\xf7\xe3<2\xc6\xe0\x7f\x82.\x1c\
\xc1\xb5\x13Y\\U\x16\xc4.V\xb9 \xe5\x81l\r\xd8\x1eHy\x80\xadA\xb6\x8769\xfc\
\xe9\xcb\xdaS9\x94\xc3\xf5\xc9\x8b8\x9f(/"\x90\x9f\x01\xf99P\xb0\x1f\xe4\x0f\
\xec\xe0v~\xfb\xd1\x94\x94\xb6\x05k\xcf\xfe\xb8\x03\xd3\xac\x00\x96\rH\x1b\
\xb0\x9c\x1d\xdc\xcem\x8a-\xf9\xf9\x07\x8a3E\xc4J@&\xab4\x00\xe7;Hw@n\x0b\
\xa47\x01\xbd\x81X}\x8b\xf3K\x85\xa2|\x1b\r\xaf\xcf\xce\xf7\x95\x0ch\xf7\x0e\
\x00\x18\xc3\x94\xcbTS\xbdi\x87\xc0\x84FU\x84=.\xda=\xaa\xce\x8d\xb8\x7f]\
\xea\xec\xa1\xd1\xc1\xe1\xcb\x87\xf7\x9a\xa2U\x9e\xc6\xad\xc9\x08\xb9\xfe\
\x0c<\x1d\xe0\xc9\xbdb\xea\xc0\xe1\x9b\xe8\x0b\\\xbc{\xf9xT6+\xa5Rmu\xe1$\
\x91H\xee ,X\x91\xe9\x13\xb5\xba\x05fF\xbb]1\x8b\x1f\xde\xc7\xbaG\xf1\xcar\
\xbe$\xcfX\xb3\xcb\xa7\xab\xb3\x15\xbb\xeb\x8c\x1d\x03\x14\x1adw\xa4#\n\x91\
\xedl\xd6G\x1c\xc3\x0c6\x0c\x11\xae\xc6\xe9\xf2T\xb3C\x8a\xb3\xa2\xb6F\xe3#\
\x98\x9e\x18\xc3h\xf7\xab\x0f\xf2\x84\x85s\x01R\x99\x00\xbe\x1f \x93\xed\x85\
\xa7\x03\xf8:\x80#5\x14\xb9\xf0\\\x1f\xcf\x1f\xce\x87\x92\x13\x8cX\x15\x04x[\
h\x19@v\x80Z\x1d`f03|\xcd\xb04\x81\x95B\xef\xa0#\xe5\xe2:^M\xbc\x81o\xd1\x1f\
?|\x148\x98\x06\xd2\xadh\x0b\xcc\x0c\xb3S\xcc\x86a\xcc6\xb2a\xd4\x9ba\x83\
\x92\xfe\xc2\xc0)\xebJ\xe6\x18\xdd!\x01G\x08\xb8\xc7/9G}\x1d\xc0\xd3\x016\
\xf2(\xff\xfc\xcae\xa5\x1cS^j\xcc%\nt\xc7\xbe!\xeb\xfe\xd9qy\x97H\xc0\xd7\
\x01\x16_\xc4\xaf\xe7\x9em\x8c\xfd\xe6\xf7p_\xc29\rc3\xac\xa2\x15\xfd\xed\
\xfc\x7f\nD\xa1\x99^\x99\xe1\x1b:\x8b\x14\xc7\x88+\xa5x\xa9\x9b\xff\x05\x85\
\xe8\xeb\xbb\xcb\xca\x80\x19\x00\x00\x00\x00IEND\xaeB`\x82V0#\x0c' )

def getinsert_stackBitmap():
    return BitmapFromImage(getinsert_stackImage())

def getinsert_stackImage():
    stream = cStringIO.StringIO(getinsert_stackData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getinsert_layerData():
    return zlib.decompress(
'x\xda\x01(\x02\xd7\xfd\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\
\x00\x00\x00\x10\x08\x06\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\
\x08\x08\x08|\x08d\x88\x00\x00\x01\xdfIDAT8\x8d\xadR;h\x14Q\x14=\xf7\xcd\x1b\
g\xe7\xcd\xcc\xc6\x9d\xa8\xab\xac\xa94+\xa6\xb1\xd0B\xc1B\xab`\x91F\xb4\x13,\
\xec\x03\xd6\x9a\xcaRD\xb0\x0b\n\x96\tj\xe3\xa7\xd0B4AA$"\x06\x91\xc4,\x185 \
\xaca\xe3~2;;\xcc\xdeka\x16V\x1c\xfc\x10Os/\x9cw\xce}\xef\x9dK"\x82\xcd@mJ\
\xfd?\x0c4\x00\x10\xd1\xee^\xff\x0fHEd\x85\xc6\xca\xb8q\xf6\x00N\xbb\x1a\xd6\
/Gl\x03\x98\x02\xc8\rAn\x01\xe4\x16\x007\x842\x05\xb4\xc9\xeb\xde\xbc;{[\x0f\
\x87(\x9f\xd8\x8b|\xf6\x90\x08I\xce`\xfak\x02\xc9%\x90N\x13Gw\x85\x18)\x17A\
\xfeN<{\xbdP\xd6)\x83\x7fw\xcf[\xef\xdb\xb0&\x0ec\xdb\xf6\x10\x9e\t\xf0\xe0\
\xf2\x0b\xec\x1f*\x02\x96\x834\x8eX\xbf\xadb\xea\xc2\x13h[e<\x01\xc0<chL\xa2\
R\xa3e\x81\x99Q\xa95\x1b\x13\xd7\x1f\xbdK\x95\xdb\x9d_\xaeM\xe9\xc7\x1fd\x12\
\xc0d\xbf\x88\x88\xec\xad%{tK\xce\n,\x8d\x93\xc7Z\xf5S\xc2\x0c\x16\xc6j\xd2Y\
\x9c]\xfar\x8d\x88\xe4\xf3\xe2\xea\x0ce-R\xe9\x90u\xf5\xe0\x19\x7f| \x0c\x94\
\xef\x07\x08\x07\x07\xe0\x99\x00\xbe\t\xe0h\x03\x9b\\x\xae\x8f;W^\xbe\xc9\
\x8c\xce\xc9S\x91\xbcXu\x04\xd0]\xa0\xd1\x02\x98\x19\xcc\x0c\xdf0,C`\xdbFX2a\
v\xf6\x02\x01\x80N\x12\x83\x99!\x1bb\x16\x86\xc8\x8f\xca\xc2\x88\xe3\xb6d\
\x1aD5\xb9\xbf\xf4\xb0\xbb\x8f\x14\x1c\xa5\xda\xee\xf0(\xef\xe9\x89\x96_\xd5\
\xab\xdf>r\xd5\xb6\x1d\xa9V\xa2\xb9\xcc?\xe8\xc7\x8e\x11\xeb\xd2\x91\xf3\xfa\
"\x91\x82o\x02,\xdcK\x9f\xceM\xd7\x8e\xf7\xf8\xbf^_\x11Fs\xbd\x8eN\xf2s\xda\
\x7f4H\xd6e\xe6\xd3s>g\x06\x91\xe7\x14\xe9\xdaJZ\xe9\xe7\xbf\x03\xb6Q\xcb/\
\xaa\xbc\xa5%\x00\x00\x00\x00IEND\xaeB`\x82\x0f\xbe\xf4\xe6' )

def getinsert_layerBitmap():
    return BitmapFromImage(getinsert_layerImage())

def getinsert_layerImage():
    stream = cStringIO.StringIO(getinsert_layerData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getmove_upData():
    return zlib.decompress(
'x\xda\x01C\x02\xbc\xfd\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\
\x00\x00\x00\x10\x08\x06\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\
\x08\x08\x08|\x08d\x88\x00\x00\x01\xfaIDAT8\x8d\x8d\x93\xcbk\x13Q\x18\xc5\
\xcfwg2i^\x93\xe2\x03\xc5G\x12[D\x92\xd6\xf7\x83T\x8c\xe8\xce\x85\x88\xfe\
\x03\xfe\r\xe2\xc6\x85h\x05\x17".\xc4?\xc3Z\xf7"\x88\x1bq!\x14\\)(!\xed\xa2T\
\xaaI\'i\x9e\x93\x99{\\t\x885\x99T\xbf\xcd\xbd\\\xce\xf9\xf1\x9d\xfb\xdd+$1\
\xaeDd\x1f\x80I\x00\xab$\x9ba\x1as\x9c9\x9a\xda5\x9b+\xcc\xbd\xb0\xed\xf4\
\xa1N\xbb\xfeHD\x16H\xfa\xff\x05\x10\x91\xb3\x93\xb9\xe2\xb3c\x97o_\x9d\x9a\
\x9a\xc6\xf2\xe77\xf77\xab?|\x11y=\x0c\x19\x01\x88\xc8\xa5d\xa6\xf84\x91-]\
\xac\xb6M\xecw\x15f\x8b\xd7g\xa2Vd\xfe\xd3\xbbE%"\x8b$\xbdP\x80D&\xae\xd9\
\xd3W\x1e\xdb\xd9\xe29\x15\xdb\x8dj\xb5\xc6rE\xc1>\x91\x97S\xa5[\x05\xcb\x8a\
>\xfc\xf8~A\x89\xc8+\x92\xfd\x01@D\x0cX\xc9\x9b\xe9\xec\xdc|*[<n\xc6\xf7\x80\
^\x9f\x1e\xb5\xfc\xac9\xf8^^f\xead^\xce\x94n\xe4\xa9\xfd\x07\x1f:/%\x80\xb8B\
\x12"\xb1#f"qG\xcc\xd8yeX~|\xef\xd1L\xf2\xf0\x85\x03*j\x9b\x86\x12\xa4b\xa2U\
\xa3\xbc\xe6\xd6\xbeUz\xed\xbaj6\x9c%g}\xfdy\xa7\xe3T\x82\x08\xdd\x15\xaf\
\xd5\xbd\x07\xa0\x0f\xa0\x10M\x1f|B\xede\x94a@k\rg\xc3Q\xdd\xb5\x95\xaf\xcd\
\xca\xd2\xddVk\xe3\x0br\xb9\x08\xbauw\x10\x81\xa4\x06\xd0\r\xe2t\x01\xa5\x01\
\x02$\x04\x80\xaf5zn\x9f\xadV\xdb\r\xa60\x98\x84\n\x9b\xe2_\x0b\x00\x02 \xb5\
\x028\xa2\x0f\x03\x00 \xb7l\xff\xae0\x001\xec\xde\x815\xee%\xea`\x13\x1c\x00\
 \x05\xdbs\xed\xd0\x01\xa0!\xa0l\xdd\xe3\x1fW\xa86\xb4\x03\xdf\xdd\xa4\xdbX\
\x85\xf6:\x80(\xad{\r\xe5\xf7\x9a\x00\xdc\x91\x0ed\xf8;\x8bH\x1cf\xea\xb4aEf\
Hc\xc2\x00\x15E\x12\xa4W\xf1;\xde[\xb2\xf1k\xbb\xfe7\xb4\x9c\xe0\xc4\xf42c\
\x07\x00\x00\x00\x00IEND\xaeB`\x82.\xc0\x03\xd0' )

def getmove_upBitmap():
    return BitmapFromImage(getmove_upImage())

def getmove_upImage():
    stream = cStringIO.StringIO(getmove_upData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getdeleteData():
    return zlib.decompress(
'x\xda\x01\xae\x02Q\xfd\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\
\x00\x00\x00\x10\x08\x06\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\
\x08\x08\x08|\x08d\x88\x00\x00\x02eIDAT8\x8d\x95\x93MHTQ\x14\xc7\x7f\xf7}\
\xcd{\x93O\x1b\xcb\x95L\x1a\xa28c\x1a&(I-#P\x82\xb0E+A\xf7E\x11QD\x04\xad\
\xabE\xd0f(\xb0M\xb4l\x9b\xd6F\xc42\xc3\x11M\xf3\x8b\xc1E\x81\x9b\x06\xc6qlj\
\xde\xf5\xbd\xdbf\xde4N\xab\x0e\\.\x9c\xff=\xe7\x9es\xcf\xfd\xa1\x94"\\\x80\
\x00N\x03F\xb5\xbf\xac\xe9eM\x1c\xf2W\x1dh\xecmj\x9a{88\x98\x1bhn^\xb5t\xfdd\
\xa8E\x0c#~\xae\xbd}\xf9\xd9\xe8hn\xb0\xa3#\r4\x85\x9aPJ!\x84h<\x13\x8b\xbd{\
:0\xd0\x17\xab\xaf\xc77M\xae\xcf\xccl\xce\xef\xec\x0c\x0b!\xbc\xb3--S\xaf\
\xc7\xc7\x13\xae\xebR\x04\xae\xa6R\xcb\xd3\xeb\xeb\x17\x94R?\x04 \x92\xd1\
\xe8\xa7\xc7\x89D\x7fc]\x1d\x86\xe3`\xda6\xbeeqmvvK\xd3\xb4`bd\xa4\xb3\xdeu1\
\xcbZ\x11\xb8\x92J-|\xccd\xfau\xa0\xe7\xb2\xeb\xde\xee\x8eDl\x15\x04(\xdf\'\
\x08\x02t\xa5\x18nm=v\xa9\xad\xed\xb8%D\xc5\xaf\x82\x00K\xd3\xf0\x94\x8aN\
\xad\xad\xbd5\x80\xaf\x1f\n\x85o\x17m\xfb\xe8\x11)\xf1=\x0f3\xdc\x1d\x07\xe1\
\xfb\x94|\x1f_JL)\t\xa4\xa4X,\xf2&\x9d\xfe\x0e\xac\n\xa5\x14\x96\x10\xf1.\
\xc3\x98\xbc\x17\x8b%\xeb\xa2Q\x0c\xdb\xae\x94\x1b\xb6d:\x0e\x86\xe3\x10\x98\
&7\xa6\xa77?\xef\xec\x0c\x15J\xa5mQ\x9e\x00\x96\x10\xf1\xa4\xa6M\xdeohH\xdaa\
`M\x12\xdd\xb6\xb9\x95No\xa6\xb3\xd9\xa1}\xcf\xdb\x060\xa82\x15\x04\x94\xf6\
\xf6\xa0\xaa\xdc\xb0\xa5@J4\xcf#88\x80\xf2\xa5\x84\x9f\xc2\x12"\x9e\x80\xc9\
\x9b\x90\xb4\xca\x82\x1e\x89\xfc-\xbd\xaa%\x15\x89\xf0 \x93\xd9\\\xda\xdd\
\x1d\xda\x97r[\x00z\',\xde\x81\x1e\x8b\xc3&\x84\xf8\xe7\r\xc2$w3\x99\x95\xc5\
|\xbe\xd7\x00\xba\xfa\xe0Dm0\xc0\x81R\xc8b\x11_\xca\xca\x14\xc2\xe9\x9cw\xdd\
\xf8b>\x7fJ\x03V\xe6a\xebgM\xb0\x07<\x82\xad\'\xb0\xf1KJJ\x85\x02\xbf\xf7\
\xf6(\x15\n\xe4\xf2y\xdeg\xb3\x19\xe0K\x85\x83\x04,<\x07\xf5\n\xd4KP=\xb0a@\
\x9b\t\xf1nX\x9b(k/t]u\xe9\xfaR\xc8\xc3!\x98:`n\x0cr\x9d\xb0j@\x05&\x13\xe2\
\x9d\xb0<\x06\xb9v8\x04S-\xb2\xff\x8d\xf3\x1f\xd6Eo5\xb7\x8a\xc2!\x00\x00\
\x00\x00IEND\xaeB`\x82\xd6\xac3\xa1' )

def getdeleteBitmap():
    return BitmapFromImage(getdeleteImage())

def getdeleteImage():
    stream = cStringIO.StringIO(getdeleteData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getchange_nameData():
    return zlib.decompress(
'x\xda\x01\x01\x02\xfe\xfd\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\
\x10\x00\x00\x00\x10\x08\x06\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\
\x08\x08\x08\x08|\x08d\x88\x00\x00\x01\xb8IDAT8\x8d\xc5\x93=k\x14a\x14\x85\
\x9fw\x9c\x9d\xc92\xefl\x18\x10I\xa7\xa2\x85\x16\x8aVB\xc4\xd2\x1f \x88\x85b\
\x11\xd4B\x12"Z\xca"\x01I@\x84HL\xb0\x08\x88\xdah\x11M!\xd8\x89\x85\x85_(\
\x8a\xad\x90\xfdP\xd2\x18\xddYtw6\x8e3\xc7&+f!E\xd8\xc2\x03\x97\xcb-\xee\xc3\
\xe1\\\xae\x91D?r\xfa\xda\x06\x0cp\x14\xf8\r|\x04\x0e\x03\x9f%\xbd\xdf\x8c\
\x83\x1d\xc04\xb0\x0c\x8c\x03\xdb6ea-\x83}@\xd6~p|x\xf5\xe1\xc8\xab_\x8f\xc7\
OKB\x12\xe9\x8b\xb9\x85\xf4\xdd\x9d\x89\xee\xdc[\xdd\x0c\xb6\x02\x8e\xd3\xa8\
G\x8ak\x87\x14Wop\xffT\x04\xa0\xb8z@\xcd\xda\xee\x8d\x0c\xb8k=\x02\xc8\x1aK\
\x18\xaf\x84\xf1\xc3<\xf1\xec\xd5"\x8c\xe5\xcd*&\xb1\x00\xa4O\xcbc\xa6\x10\
\x9c\xc7\x0f\x07\xf1\x83G\xee\xc1\x91\x0b\xee:\\k\x05\xb5\x1ah\xc0^1^x\xb35\
\xb3g~Ka\x10y\x01,\x9c\xb0\xca\x0b\xa3\x14\xc3\x19\n\xa1\x8bog\xd3\x97\xd3w\
\xd7\x03\x00\x94\xc1j\xf3\xad:\xcd{\xb4\x8b\xb3\xf2B\xf0,\x9c}\xf63\x9f?r\
\xceI\xec\x19\xf9\xc1\xb0\xf1J\xa8\x15\x0cu\x01Y/\'\x17\x97\x9d4\xf9\xa44)\
\x99\xd6\xb7\xd7\x9d\xc9h\xbb\\\xfb<\xf3\x82\x8b\xf2K\xb7\x1c\xcf\xbe1\x9e\
\xfd\x1b\xe2\x12\x90\xff\x0b\xb0S\xfaj`\x020\x90\x91\xb5\xe3H\xcd/Fq}\x17\
\x8d\xca\x94\xe2\x1ay\\\x1fp\x8c1;\x81c\x00\'\x17\xd9\xfb=\xe1:)\xcb\x00E\
\x9f9D\x19X\x0c&\xf5\x011J\x9a\xb8\xfa\xb1rI\x8djYq\xa5c\x80k\xc0\x10P\x01\
\xf6\x03O$\xdd\xde\xe8l\xbd2\xff\xfd\x99\xfa\x06\xfc\x01\xaf\xcd\xc6!\xd77[k\
\x00\x00\x00\x00IEND\xaeB`\x82\x85\xe7\xdfg' )

def getchange_nameBitmap():
    return BitmapFromImage(getchange_nameImage())

def getchange_nameImage():
    stream = cStringIO.StringIO(getchange_nameData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getcustom_parameterData():
    return zlib.decompress(
'x\xda\x01\x0e\x03\xf1\xfc\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\
\x10\x00\x00\x00\x10\x08\x06\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\
\x08\x08\x08\x08|\x08d\x88\x00\x00\x02\xc5IDAT8\x8d\xa5S]H\x14Q\x18=w\xe6\
\xce\xba\x7fn\xb6\xbb\xaek\xb6\xf9\xd7J\xa6\xb1\x14\xd8\x0fE=\x04a\xa5 \x82%\
\x05QA\xbdE\x18E\x0f\x11\x15D\x04\x05\xbd$=E\x05=\xf4P=EA\t\x15d%E\xf8\x93\
\xd1\xa6\xa4\xe5\xae\x99\x8e\xb9\xbb\xae3;\xbb3\xf3\xf5`ce\xbeu\x9e\xce\x81\
\xef|\xf7\xde\xf3}\x97\x11\x11\xfe\x07\xfcO\xc1\x18\xf3\x94\x86k/J\x92d\xe3\
\xa2(p\xce\x99\xc4E\xc69\x178\x17X.\x97\x13\xdf\xbe~q\x8c\x88\xc6\x16l\xb0\
\xa4r\xd5\xa5\x96#\x97\x0f\xfb\xfd~\xb8\x1c\x12\xdc\x0e\x1b\\v\t.\x87\rn\x87\
\x04\xceL\x1c=\xb4\xcb\x0e\xa0\xd9\xf2\x08\x16\xb1\xd9]\xa5\xc1\xf0\xda\xed3\
:\x87\x9cP \'\x14L$\x14\xc8\xc9\xdf|:c\xa2i\xf7\x81-\xa1\xd2\x8a\xfa\x7fn\
\xe0.Z~%PS\x1f\x9aH\xa8P\x1d:TM\x82\xaa\xe9\xc8h\xb6Y\x9d\xb5A\xd5t\xd4\xd4m\
\xf5\x96\x87\xef\x9fc\x8cu\x10\x91\xce\x01\xc0\xee\tl(Y\xbb{\xf3dJC&GP2">=\
\xbd\xde\'\n\xf8\xceE\xc1`f\xae\xa0\xe9\xc0\xc9u>\x9f\x17\x19MG\xf3\xfe\xb65\
\xf1\x91\xe1\xd3\x00\xcep\x00p\xfa\xcb\xce{+\xd6\xfb\x08@Z\xcdb\xf8\xdd\x93o\
\xa3\xfd\x9d-\xdaL"\xfa+\\\xb7\xe4\xf0t\xed\xd8\xdb\xb6Ru\xe8p\xbb\ny\xf5\
\xea\x8d{\x18c\xd7\x04\xa7\xaftO0\xd2\xb0\xdez\x8a\x99\xcb@\x1e|\xdda\x99\
\x01\x80\x88\xd2_\x07z\xda\xa3\x1f\xdek\xb3\xf9\xa8\xd8\xb0c\xff\xf2pm]\xbb\
\x90\xe7\t\xecs\x15V:\xad\xe2\xe4HOJ\x91\x87\xdb\xe7\xcf{2\xf6\xe9f_\xd7\xe3\
\x98\x15hR1\xe0Z\\T%h\xa9\xf1\xab\xc9Xo\xca*,(\xaf\xf3\xe4\x17W\x9f\x9d\xdf\
\xc0]Tu\xd1W]_)\'g\'\xf3yp@\x8f\x0fEo\x0b\xca\xe4\x97\x07\xe3\xfdO\x9e\x93i\
\xfcZ&\x01\xc1H\xc3&\xa77\xd4j\x99En+Y\x14\x8a4f\x99\x1drB\x85\x9cP\xf0\xea\
\xd1\x8dw\x13\xb1\x81\xcb\x8c\x88\xc0\xed\xee\xa5\xc5\x91\xc6\x97\xc1HC\xc82\
\x8d\xf7?\x1e\xc9\xa6\'\x15&\x88"\x13my\xc1\xc8\xce\x90 J\x00\x80\xd4h\xff\
\xf4H\xe7\xad\x83\xcaT\xfc.\x07\x00=\x93\x8e\xe5\x17\xaf\xb8\xe3\x0bo<.9\x17\
3\x00\x08\xd4l\x0baA\x10\xbe\xf7>\xecR\xa6\xe2w\xff\xda\xc4\xf4X\xf4T\xfc\
\xed\xbd\xee\x85M\xbf1\xf1\xf1\xd9\xd8\x8c<t\xc2\xd2s\x9bHD9\x97\xbf\xec\xc2\
\xd4\xd0\x9b[N\xdf2\'\x11\x01d\x82L\x03D\xe6\x1c\xff1\xd8\xf94\xa7$\xe7\x0eb\
\xf3\xbf\xb3\xd3\x1bj\x05\x13\xf2AF\x96L#C\xa6\xa1\x99\x86\xae\x91\x91\xcd\
\x1a\xba\xa6\x91\xa1w\x13Q\xda\xaa\xff\t\xdb\x15M\x11\x08\xef\xdeH\x00\x00\
\x00\x00IEND\xaeB`\x82\xd8\x02qb' )

def getcustom_parameterBitmap():
    return BitmapFromImage(getcustom_parameterImage())

def getcustom_parameterImage():
    stream = cStringIO.StringIO(getcustom_parameterData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getmove_downData():
    return zlib.decompress(
'x\xda\x01\x1f\x02\xe0\xfd\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\
\x10\x00\x00\x00\x10\x08\x06\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\
\x08\x08\x08\x08|\x08d\x88\x00\x00\x01\xd6IDAT8\x8d\x85\x92\xbbk\x93Q\x18\
\xc6\x9f\xe7|\x97\xdcL\x9bK\xf3\x85/%^j\xaa\r\xb4\xea\xe0"\x0e\x82\x97\xc5\
\xc5\xd2?@\x14\x177\xa1\xfe#\x16\x8a\x82Pp\xd1\xc1"\x0eu\xaa:\xd4A\\2\xaa\
\x88C\xdb(b/P\xf1\x1a\xda\xe6<\x0e\x89\xd0$_\xea\x81\xb3<\xef\xf3\xfe\x9e\
\xf7=\x1cJB\xf7\xa1\x97>g|o\xcc\x91\xeb\x01pd\xe8[\xed\xfc\xb0\xbf\xb7\xe6$\
\xedtx\xbb\x01$\x9dx\xae\xb2\x949v\xf1\x0c\x1dW\xa0\x01$\xf3\xed\xe3\xcb\xe5\
?\xeb\xefNH\xfa\xb5\xd7\xef\xf6\xc4\x03\xa0\xeb1\x969H\x18c\x08@\xb2\xa0\x17\
\xb7@\xb1\xc7k\xa2\x00 %\x08\x04\xd5\x1aR \xd9\x8c\xb2F\x03\xc0\x96\xbew\xbd\
\xde\xa7\xda\x0f \x03\xb0\x8b\x19\x8d\xe87\x01\x011\xba\xf6\x7f\x80EG|+\xd8\
\x18\xc7\x02k\xb6/\x80d\x92d\x02\x80\x0f\xb6u\xb6\xe6&\x81D\xcc\x17\x90Nrt4\
\xc6\xe1\xe1\xe4\xbf>\xb7\xdd\xec8\x89\xec\x9c\x1b\x1f,\xd1\xb8\xf2SC\x05\
\x92V\xb2\x04\x89\\fP<R\xcd\xe5\xd2\xfe\xbc\xe1.6~\xd67I^\x95\xd4p\x01@R\xd3\
\x8d\x0f<\xf4\x0e\x04w\xb2\xd5\xcbG\x1d\'&\xb5t\xc4|\x0faq\x08cg\xaf\x87\x87\
J\xf9p\xf1\xf1l}\xe3\xeb\xca=\x00\xdb\x1d+\xec6\xbe?kl\xbe\xbf\xb6\xf5v\xe1C\
\xd3n\x13$h\xa8\xb0\x98W\xb9T`\x90\x1f\xc0\x8b\'w\xeb\xb5\xd7\x8b\xb7\xd7?\
\xaf\xceK\xb2@\xf4W\x9e\x88\x17\xc7\x1f\x15&\xa6\xc6\x83b\xa8\xe3\x952G\xca\
\x05\xd4\x9e?X\xa9\xbdZ\x98^\xfb\xf2\xe9iG\x83\xa4\x9e\x0b`$\x15Tk\x97n\xde\
\xd7\xad\x99%]\x98\xbc\xb1\x1c\x04\xe5\xc9Ho\x94\xd8\x86\x84\xa5\xca\xc97\
\xa7\xcfO\xad\xe6K\x87\xaf\xf4\xf5\xf5+\xb4!Y\xcfK\x9d\xda\xcf\xf3\x17}b\x08\
\xa9\x17\xf2\xeb\n\x00\x00\x00\x00IEND\xaeB`\x82\xbf\xdc\xfb]' )

def getmove_downBitmap():
    return BitmapFromImage(getmove_downImage())

def getmove_downImage():
    stream = cStringIO.StringIO(getmove_downData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getsampleData():
    return zlib.decompress(
'x\xda\x01a\x02\x9e\xfd\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\
\x00\x00\x00\x10\x08\x06\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\
\x08\x08\x08|\x08d\x88\x00\x00\x02\x18IDAT8\x8d\x85\x90OH\x94Q\x14\xc5\x7f\
\xf7}\xef\xfb\xf7f>\x9d\x19G\x9d\x19\xa9\xd0"\x15\xca\xc0\xdcDD\x10\x11."h\
\xd3.\x8aV\xd9&\x886\xb5\r*\xc8\x95\x8b\xd6\xb6\xaee\xb4\x0c7\xd5\xc2\x85\
\x92b\x8bL\xa1$c\x944\xacpf\xfc\xe6\xb5\x18\xb3Ig\xea\xc0\xe3\x9e\xf7\x1e\
\xe7\xdcs\xaf\x00f\xf8\x10\xb7}\x07M=D@\x07\x88\xf6A\x07{x\xa9\xaa\xb6^\xbc|\
3\xaa/\x0f\xf0xl\x98+\x9e\xc3.XP[H\x94E\xa2N$\x99C\xa2\x1c\x92\xecD\xa2\x1c\
\x95 \xcb\x8d\xfb\xe9\x1e\x9d\tI\xee\x15o\xa3Z\xc1~/\xd6\xd2\x88\xda>5\xee\
\x8a"\x93\xd0I9\x9cU\xa7\x06\xf7\x99\xf1\xd0\x95&.\xa0\x1c\x8dx\x06\xe5\x19\
\x94\x17\xa2<\xc3f\xacy=\xb3pU\xafeO\x8f\xcc\x1f\xbf\xd6\x8347p\x94\x90n\tIG\
\x86TKH*\nI%}\xe6\xc7\x1f\x8c\xe8\xf2\xcf\xf5\x89\x95\xd9\xe7g\x95\xf6\x9b\
\x0c"\x80\xb0\xaa \xf4=L\xe0b\x02\x0f-q\xbcR\\\x9e\xd0\xe7[\xa7\x86\x1e\x9d\
\x98j\xf7u\x03\xad\xe3#QGmq\xc9\\\x8d\'\xda\x90\xa8\x93\x92\x9b\xe6\xd6\xe8\
\xfb!\xddn\xc8\xb4\x06\xcd\xc2\x97`\xb3\x88h\x85\xb8\x0e\xe29\x88\xab\x91\
\xb2K\xe0yt\xb4z\x19\x19\xec\xe1R_7\x0f\x8d\xcf\xde%\x88B\xc4\x07\xe5#N\x02\
\xd1\x06q\x0c8\x86\xcd\x8akg\xdf-\xdd\xd1\xfd\xc7\xb88v\x8f\xee\xc6\t\xaa 1\
\x8e\x9bB\xb9y\x1c7\x8fr\x0b\xb5\xaa\xf3\\\xbf\xf9\xf4\x82\x8e\x924\x9a\xfe\
\x0fl\x99\xb8\xf2\x19\xb0\xf5\x8fX\x0b&\xdc\xf2\xfe-\xfe\xcbdyG\xfc\xbb\xd8\
\xea\x8f\xffto\x98d\xfbZoP\xae\xc0\xabI6\xde\xce\xf1\xc1\x18Z\x06\xfa)\x1c\
\xe9%H\x98\xdd&\x95\x9dq66b\xbe\xad\xaf\xbbr\xe6$w\xad%\x9c\x9e\xe3\xc9\xd75\
;/"\xca\x84\xf4\x1d\xed\xe3\\W\x8e\xfe\xae<\xfb;\xda8\xd0{\x90\xc2\xc2GV\x8a\
\xab,.-\xab\xc5\xc5O\xee\xcc\xe4t\xe9\x99Xk\xf9\x1fDD\x80\x02\xf0\xc5Z\x1b\
\xd7\xff\xfd\x02\x83h\x9a?\xc5\x88\xe7\xac\x00\x00\x00\x00IEND\xaeB`\x82\xed\
.\x1fO' )

def getsampleBitmap():
    return BitmapFromImage(getsampleImage())

def getsampleImage():
    stream = cStringIO.StringIO(getsampleData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getinstrumentData():
    return zlib.decompress(
'x\xda\x01\xb7\x02H\xfd\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\
\x00\x00\x00\x10\x08\x06\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\
\x08\x08\x08|\x08d\x88\x00\x00\x02nIDAT8\x8d\x85\x91]H\xd3a\x14\xc6\x7f\xef\
\xdf}\xa8[s\xce\xfc(sNe\xa5\x88Fi\x88\x86\x99\x15YFH\n]Dx\x11\xd2\xc7\x85u\
\xd1\xd7E,I\x10\xa2\x88\xba(\x13\x82.\xa2\x10\t\x92\xbc2\x8b\xacT\x10D\x13[i\
\x0esh\xa2\xd2\x86\xa5\xd3\\\xfb\xd7\xdb\x85JKP\x0f<p\x0e\x0f\xe7\xe1\x9c\
\xe7AJ\x89\x94\x12@Y\xea\xd7BVn\xc1\xc5\xa2\xe2\x92\xab\x80\xb2\xb4\xac/\xc8\
\xa5+}3\xbb\xd6ZNL\xdbQ\xe9\xb8\xdb4_\xf7\xf4\xad\xb4\xa5\xd8K\x94\xfc\x1cq\
\xbc\xe2\x18/\x1f\xdd!\xfb\\\x05\x8f\x0b\xf3D\x0b+Tx\x94u\x8b\xc5\x9e\x7f~rN\
\xafo}\xf3\xce=\xef\x0f8\x95\xb9\x9f\x8c\xe5e\x91l4@\xf1\x1e\x12\xb4\x1a\x9c\
+\t\x98\xe2\xd3\xaf+\xd1\x99\x89\xbd}\x1f\xfd\xed/\x9f\xdf\x18\x1f\x1d\x1e\
\xd2t\xf7\xc9\xd6\xb3\'\xc4\x07\x9d\x8e\xe8\x90\x104S\xd3xW\x12\xd0\xab\xa36\
\xdf\xf8\xa7\x80\xc7\xd5\xd1\xe8\x19\xec\xba\x0f\x80\x94\x92\x9cm\x94\xdbm\
\x9c\xae\xafE=r\x80N l\xf9\xef\x85\xb9T\xdf\xaa\xe2\xbb\xd9LY\xb0\xe1\x04\
\xa5\xa0\xa9\xbe\xc0\xc0X7\xb2\xec\x10\xcd\x80v\x89\xdb\x9dG\xd5\xeb\x06|W*\
\xe9Y.\xfc\xdfP^F\x83\xd7\x89tw"K\xf6\xf3\x0cP\nrp\xbcj`\xda\xebD\x1e=\xcc\
\xc3U\x05\xb6gpj\xb0\r\xe9u"]\xed\xfc\xd9\x97OOK=?\xbcN\xe4\xfb\x16\xd4T;\
\xa5\xab\n\x00\xc6\xdb\xd7p{\x9d\xc8\x077\x91/\x9e,\x88y\x9d\xc8\x9a\xcb\xf4\
\x07\xbf\xb5\x04%\xd8e)\xa5o\xc0E_c3X7B\xf6\xd6\x7f\x9ck\x98^)e`y2\x02\x08\
\xd9\x9b\x84\xc3\xa0c\x1d\x80\x0fr\xf51d\xa7X\x17/D\xf0+\xa0\x88/C\xe1\xbd\
\xa6\xd0\xb86t\xe1\x08\xad\x81YU\x99mim\xaf\x16\xa5i\xd4\xde;\xc8\x19\x93~\
\x85\xf0\xb5a\x88\xc8$\x14K2J\xa4m\xb1ObF\x13\xc3\xc9K5u\x9a\rF\xa2Mz\xf8\
\xec\xe5w\xe7WF-a\x982c\xb1X#\x16\xceC\xf5/ 0\x8fT\xfd\x08\xd5\x8fT\xfd\x18\
\r\nQ\x16s\xac(J\xc1a\xd0a\xea\xffFS\xbf\x87\x0e\xc0\x90\x11C\x8e5\x82\x9d\
\x9bLXc\rX\xd7[\xcc\t\xa9)\tq\xc3\xb3F\xcf\x84?td|\x86\x91\xa1\xc9\x19\xf7\
\xd8\xe4T\xa3Xt\x7f\xd5\x12B\x08 \x1e\x98\x90R\xaa\xc1\xdc_@\x14\x8b\xc9\x1c\
\xf0\xa7\xf1\x00\x00\x00\x00IEND\xaeB`\x82\x9fa@\x19' )

def getinstrumentBitmap():
    return BitmapFromImage(getinstrumentImage())

def getinstrumentImage():
    stream = cStringIO.StringIO(getinstrumentData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getaddData():
    return zlib.decompress(
'x\xda\x01>\x02\xc1\xfd\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\
\x00\x00\x00\x10\x08\x06\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\
\x08\x08\x08|\x08d\x88\x00\x00\x01\xf5IDAT8\x8d\x85\x92Ok\x13A\x18\xc6\x9f\
\xc9\xce\xec\xcc\xa6!\xb4\x91\x04\xa5\x01QT\xac\x87\xd0b\xad_@\xf4\xd0\x9b\
\x17\xc1\x8b\'\x0f\x9eD?\x81\xe0I\xef~\x02o\x82R\x05\xf1\xee\xc5\xa2\xe2\xc9\
\x7f\x14\x91\x82\x82\xa5i4\x964\x9b\xcc\xce\xce\xe3!\xbbi\x92\x06;\xb0\xec\
\xf2\xbc\xcf\xfb\x9by\x9f\x1dA\x12\x93\xebD\xa3\xfa\xa4~\xfa\xc8y\xa5d\x10\
\x14\x028\xe7\xed\xd6f\xfb\xe5\x97\xb7?\xeeLz\xe5\xa4 \x84h\\\xbf\xb7ri\xf5\
\xe6\xd2\x9c\xd1\x11\xb460a\x84Gw_]\x15B\xdc\'\xf9\xfb\xbf\x00\x00\x95\x99JP\
\x8a\xfb]\x90\x84\xa7\x07I\xcc\xd6\x8a\x06@\x19\xc0\xa1\x00\xd8\xc4"\xee\r\
\x00\xcc\x00\x89K\xa6Y\x07\x00!D\r@1\xd3\x8e\xda\xa4?\x06\xf0$\xdc\x00P\x17B\
\xe4\xbdm\x92mY9\x19<[X-\xae\x14\xcbJI\xa9 \x03\x89\xea\x99P\xe6#\xe4\xcf\
\xe2\xe5\xf99\xe2\xe2S\x19\x0c<\x7f\xb7\xe3\xde\xd9\xe5\xfa\x9a8u%\xf8\xd9\
\xb8f\xe6Mh\xa0u\x04\x93\x85ft\x04\x1d\x1a\x98L\xd3aV\xd3\xd1\xc0\x17\x1a<\
\xb8\xf1\xe2\x9bT\x11\x94s\tb\xef\xf7g\xf6\x1c\x0b0\x1f#\xcf\xc3\x93\xa0\xf7\
(H\xaaa\x88\xa9O\x11\xf7\xba\x99\x91c\x01\xee\xbf\xc7k.M!]\x1fi\x0e\xf1\xf4\
\xe8\xf5\xbac\x8d\x07v\x1e~{$6q\xb2\xf9\xd9\x7f\x9d\xa9\x89\x92*\xc2\xe4\xa0\
\xeaB\xacX\x1e\x05\x10\x9d\x96es\xa3\xe5\x94R\x08U\x88\xbd\x9dt\xf7\xd7\xf7?\
o\x04I\x08!\x96\x01\x94\xb2\xfe\xc5\x0b\xb7\xe4\xc3cK\x05\x15*=\x0c\xf0\xd3\
\xf3\xee\xf6\xfa\xe3\x9d\xdb\x00\xb62\xdf\x0e\xc9\x8f\x12\x00H\xbe\xcfw\x1f\
\xf9\xcf\xb0I\x7fx\x8a\xec"\xad\x93\xdc<\xf4&\x8e\xae\xc4%\x19`z\xbd0E\xdb\
\xb5\x1d\xc4\xa3B\x9a:t\xdb\xd6\x02\xd8\x9b4\x1f8\x01\xc9\x0f\xb3\xc7\x0b\
\xef\xe2\x16\xcf\x05\x1a\x01\x00\xd8\x0elk\xc3\xbf&\xd9\x9c\xf4\xff\x03\xdaf\
R\xbb3kY\x12\x00\x00\x00\x00IEND\xaeB`\x82-\xb5\x07d' )

def getaddBitmap():
    return BitmapFromImage(getaddImage())

def getaddImage():
    stream = cStringIO.StringIO(getaddData())
    return ImageFromStream(stream)

