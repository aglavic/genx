#----------------------------------------------------------------------
# This file was generated by exportimages.py
#
from wx import ImageFromStream, BitmapFromImage, EmptyIcon
import cStringIO, zlib


def getsaveData():
    return zlib.decompress(
'x\xda\x01\xf3\x04\x0c\xfb\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00 \
\x00\x00\x00 \x08\x06\x00\x00\x00szz\xf4\x00\x00\x00\x04sBIT\x08\x08\x08\x08\
|\x08d\x88\x00\x00\x04\xaaIDATX\x85\xc5\x96\xcfk\\U\x14\xc7?\xe7\xde\xf72\
\x93d\xa0Mf&\xa6\xb5\xd5\xaa\x147JR+\x14\x04\x1b\xa9Z]\x16\\\xb8\x10Q\x17\
\xa5\xe2J\xc1\x85\xe0B\xd1\xff\xa0+w\x82\x0b\x85"\x14\x0c-\x8a \xba\xd0fc\
\x9a\xae4\x0bQ\xacil2FM\x9a\xc9\xfcx\xf7\x1e\x17w\xde\xcc\x9b\x98NfB\xc5\x0b\
\x8fw\xdf\x8fs\xcf\xf7|\xcf\xf7\x9esEU\xf9?G\x94}\x10\x91<\x8c\xee\x0bO#\xf2\
\xdf\xb8\xac*l\xae\xaa\xaa\xef\x02\x10\x0f\xdf\xff\xf8\xf8\xe1\x93\x1f\xed?p\
o\xceZ\xc1 b\xac "\x18\x11|m#w\xa8\x98/\xe4\x87\xf3\xa4\xc8D:\x183\xd3\xf6{\
\xc9|\\\xa9\xac\xd7\x8b\x93\x876D\xd0\xf9\xb9\xb95\x91\xf2c\xaa\xab\x1bm\x00\
\xb9\x91\xb1\xd7\xa6\xcf\x9c\xbb\'?2Bd\x8dD\xd6\x12\xc7\x86\xc8\x1a\xa2\xc8\
\xb0\xf2\xe3\xf7\xbc\xfb\xeaSr\xf4\xe8}=\xe3\xbb2w\x95\x0b\x17\xbf"\x8ecj\
\xd5*\xef\xbc}\x8ebq\x8c\xd7\xdf:\x1f\x9fy\xf9\xech\x14Y}\xe4\xc4\x95\x89\
\xf7\xdf|\xe3\x19\xe0\xd36\x00\xc5\x0c9\x0c\xcey@\x10\xf1H\xd2\x89\xc8\xfb\
\xfe\xb4\xf2\xc3\xe2/\x1cy\xf4I\x9d8p\x90\xc5\xf99\xd6\xd6\xfe\x92bq\x0c\xaf\
\x8as\x1e\x01\xb1Ql\x8c\x19\xcaw\xa5\x00\x01\xe7\xbc4\x13\xdf\xf2\xa9\x80"(\
\x028\xef\xfb\x02\x80*M\xe7\xa5\x998|\xc6F\x15\x9a\x89\x13@]&\x96\x0c\x03^\
\x12\xe71\xde#.\x00\x12Zy\x14A\xfbd\x00\xc09\x1f\xae\x8c\x8dW%q!8\xef\x15\
\xac\x91.\x00\x82\x908\x8f\r4!\x92:\x07q\xd2\xb5\xd8n#q\x9e\xc4\xf9m\x0c\xb4\
S@\x92y\xdf\xb5\r\x9d\x0f(S\x00!xA\xf0x\xed/\x05\n\xf8\xd6:Y\xd0\xaaJ\xe2BZ\
\x9dS\xdcN\x00T5\x18\x8bB\xa0\xab\xbd\xa5\xfa\x15!t\x18\xc8\x169\xaf\xad\xc8\
%\xe8\xc9\xee\x04@D\xf0\xaa\x88\xf781\x08~`\x00\xe5\xd2\x18_\xcf~\xc9\xf2\
\xf00\x7f\xaf\xad1\xfa\xe2\xc9\x0c\x03!\xa8,3\xd1\xf6\x05T\xd3-\xe7\x01\x03\
\xad\x94x\xb1|r\xe1s\xca\x13\xe5Lz -7m\xbd\x00\'O<\xd4\x9a?\xc0\xe5/\xbeE$\
\x10\x9aj\xc0\xddN\x03\xe9\xa2\xda\xa2,u.\xc0\xf0\xdd\x0f\xb2P\xdd"\xfa\xcd\
\x10\x19i\x15(\x8b5\x868\x12\xac5D\xd6\x12[\x13\xe6\x91\x10\x19\xdb.d\xc7\
\x9f\x9e\xea0\xe0z0\x90\xd2\x05\xe0\x11\x92\x16\x1b"\x86(_\xc0F\xad\xea\xd8\
\x02\x10\xb7\x1cD)\x80\xd6<\xdcm\xfb\x1b\xc6fR\xe0IU\xb8#\x00\x91\xd0\x03\
\x82(\xc3\xbf\xd2\xae\x90\x1d\xbaqB&\x0b\xc1\xceu\xe6\xe03\xf5D\xda\xff\xf9^\
\x1a\xd8\x0eDUq>\xcd\xb7\xef4\x9d\xd6\xf6\xec\xe4>\x94\xef\x14O\xbb!IG%\xe9<\
\x94{\xdf\x1b\x80\xba\x84\xcd\x85\xcf\xb8\xabX \xa8\xa2\x13\xad\x03\x9c\x08\
\r\xba\xebE\xc7ag\x0e\xc2\xfaz\x95\xa9g\x9f\xa7|\xe0 \xd0\xd2@\xaf\x14\x00\
\xdc\xba\xf9+g_8\xcd+/=\x87\xaa\xb2\xd7\x83\x8b1\x86\xc5\xc5\x9fx\xef\xfcE\
\xc6&\xce\x00\x84\niw\x01\xe0\x1a[\x94\xc6\xf7Q\xa9\xfc\xc1\xca\xcaMj\xb5\
\xda\xc0\xce\xe3x\x88R\xa9H\xa10B}\xab\xba\xad\x0e\xb8\xde\x00\x00\x1a\x8d\
\x06\xd7\xae-p\xe9\xd2en\xdc\xb8\x81\xf7\xfd1\x91\x8a\xb8X\x1cgff\x86\xa9\
\xa9\xe9\xae^\x10\xea\x80\xdd\x1d@Z\x9a\x9b\xcd&\x8dF\xa3\xefT\xa4\x00\x1a\
\x8d&\xce%-;\xfa\xab\x84\xd9\x91\xcb\xe5\x98\x9e\x9e\xa2\\.S\xab\xd5\x06\x02\
\x10\xec\x87(\x97\xcb\x18\x13\xb5\x1b\x14\xd0\xd5%{\x02\xb0\xd6R.\x97\x19\
\x1f\x1f\xdf\x93\x08E\x04c\x0c\x95\xca\xda\xb6\x14\xdc\xa6\x1b\xf6Z({\x00\
\x1d\x14\x04lkF\xaeO\x06\x9csT*\x15\x96\x97\x7f\xa7V\xdb\x1a\xd8y\x1c\x0fQ.\
\x97\x00\x13\xda\xf1\xa0\x1a\xa8\xd7\xeb\xcc\xcf_evv\x96\xa5\xa5\xa5\x815P,\
\x968u\xea\t\x8e\x1d;\x1e\x18h\x9f\x07\x94\x94\x83\xce\x990\x8c\x7f-f\x8cA$\
\\\xa0\x84\xc3\xea\xae\x10\x10\t\x1d2\xd8\xd19\x15\x8b\xa8W\xaf\xf8\xd0\x12\
\xa3mv\xaa((\x88\x8d\xa97\x9cLOO399I\xbd^\x1bX\x88CC9J\xa5"\x1b\x1b5\xc4\x0e\
\x91x\x14\xa7;k@\xbd\xaf\xfaf\rc\x0b\x00\x14&\x8f\xf0\xc1\x87\x17\xf9\xe6\
\xbb\x85\x81\x1dw5\x1f\x11\xae__&\x7ftF\x93\xc4#\xa0\xb5\xeaf\xc3\xb9\xe4\
\x16\x80\xa4\x8bK\xee\xf0\xc3\xa3\xfb\x0f\x7f\x1c\x0f\x17F\x00D\xc2\xd1D\xbd\
7\x03y\xcf\x02\x110"\x18k\xd5\x18\xd1\x90Jt\xf3\xcf\xd5\xa5\xf5\x95\xd5\xd3\
\xaa?\xd7d\xafM\xe6N\x8d=Gw\xa7\xc6?\xb2F\x84\xb3^\xda\xf2\xa3\x00\x00\x00\
\x00IEND\xaeB`\x82\xab\xb0I\xb1' )

def getsaveBitmap():
    return BitmapFromImage(getsaveImage())

def getsaveImage():
    stream = cStringIO.StringIO(getsaveData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getgenxData():
    return zlib.decompress(
'x\xda\x01\x07\x03\xf8\xfc\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\
\x10\x00\x00\x00\x10\x08\x06\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\
\x08\x08\x08\x08|\x08d\x88\x00\x00\x02\xbeIDAT8\x8dm\x92]H\x93Q\x18\xc7\xff{\
\xcf;\xe7|\xdf\xa6\xce\xcf\xd94g\x8b\xcd4\x15\xf3\xabmFEJ!\xd4\x85\t\x11t\
\x93\x96\x15\x11\xe4M^z\x19E\x08e\x14u\xd1m\x11\x08E\x96\x1aII\xb5\x8c\xfc(5\
?\xb0/\xb3\xb96m\xca\xe6\xda\xdey\xce\xdb\x85\xd3\xd6\xd8\x81\xc3\xff\xe19\
\x9c\xdf\xf3\x7f\x9es\x14\x00N\xe4\xe4d\x1b\xbaz\x1eu\x02\x08\x02\x08\x85U\
\x8a\x8e\x0b\xcd%2\xa2\x96\x02@\xab.\xc7\xd8\xac\xd2Uix\x9e[V\xf2\n\xd7\xf6\
\\\xf1i[kS7\x80\x15\x00\xfe\xb0\xae\x00\xf0\x17\x9aKX$\x80\x00\xb0\xa9\xe3\
\x84ZNoK\x92\x13t\xc9\xab\xaat\xfd/\xc7\xac\xee\xeb\xbd\xdb\xa9~\x99\xfd6\
\x16\xe4\xfb\xc2\x85\x14\x00\xe0Zp\xd2\xf4\xd4\xcc\r\'\x1c\x00d\xa8\xb1t\xf2\
\xc5\x15\xb9\xd0\xde\xee\xa3\xbe\xf9`( \xe7\xed\x1e\xf9\xd0\xf4\xb1\xfdz\x1b\
\x00\x11\x80\x10V\x11\x80069\xc2\xff\x07\xd0\x99M.r\xfeL\xe7\xb1k\x97n%\x90\
\x80\x1bZ\x83r\x9c\xa8\x00\xb5:\x10qY\x88\x8c\xc7&G\x94\x1b\x00\x9e\xe7\x95\
\x87\x9b\x1b\xe7\x8a*\xca\xa4dA\xe1!q"\x06-\xfb_\x9f}\xf8\xa0#\x96\x83\x08\
\x08\xc7\xaf\x01\x882|\xa0\xd0iU\xcb\xce\x05\x80jr6\t\xa2\xa0\x06\xc0"f\x10\
\xbdW8\x00 \x84\xc4\xadS\xeb\xeb*\xbf \xe0\x96\xdc~\xd5\xd67\xf6\xa1\xbc\xe8\
\xaaQN\xf85\xc0?\x07\xe2\xe0\x8d\x9b\x95I\xf3\xc3TVg\x08w\xee\xf7\x1f\x8ae="\
\xc7\xf3a\x07J\x00\xe2\xd4\xc4\x94\x98j\x1f0\x1eg \x1d)\xe6\x90;>\xdb\xd4\
\xd8p\xee\x82\xd5=\xc34\x07k{\x8f\\l\xe9\x8fj\x81D\xb6 \x98\xf2M\x8a%\x9b\
\xc5\xe1\xdefp\xed2\xc8\x13\x1cG\xa93\xabf\xf3\xa8\xac\xcdv\xd8\xdfV\xc4p\
\xc2\x13\x00\xb6\x92\x92\xe2=\xb6jk\x00\x00\x8a\xeb\x0e\xb8\x8a\x8e6|\xaf\
\xae.s2\xdf\x9cgbz>k1\xd7F\xbe\xf1\x1aa\xf0\xfd\x906;S\xe3JKK\t\x86\x1d\xfcX\
\x03\x94\x16\xef\xb3\xda,\xab\xeb\xbfm]\x8b\n\x8cK\xa9\xa24\xffyz*\xdeG2S\
\x16iZnO\xff\xb8\xb5\xeb\x99}\xc7\xcb\x97v\xbd\xa5<\xbf\x9b\x8b\x98A\xac\xb7\
\x16k\xf6Vy\xef^=\xddW_\xc6\xf5%\xcc\xf4H\xdc\x1f\xaf\xca\xcb\xe7\x9af=\\yb\
\xa2\x86S\x00\xb8\xbc\xb3\xac\xb4\xc5j\xb3\xc8\x8c1\x891\x16\xa2\x94J\x94\
\xd2\x10\xa3L\xa2\x94J\xab\x94\x86<\x0b\x0b\x1c\xed}nRS\xc6\r\xeb\xf4\x8bD\
\x93\xb4T`\xder\x8a\x07\xf0\xca\xf1\xd3Q80\xf0\x8e@\x86\xcc\x18\xa3lm\x85\
\xe3\xf5\x94\xcc\x82\xdad/\x82\x92\xc0\xc5\x93Q\xc9\xef\xf1?y\xfc\xc9\xfb\
\x17\xb2\xa7$\xa5\xac\x07\xb8%\x00\x00\x00\x00IEND\xaeB`\x82\x03\\o\t' )

def getgenxBitmap():
    return BitmapFromImage(getgenxImage())

def getgenxImage():
    stream = cStringIO.StringIO(getgenxData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getstop_fitData():
    return zlib.decompress(
'x\xda\x01d\x06\x9b\xf9\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00 \x00\
\x00\x00 \x08\x06\x00\x00\x00szz\xf4\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\
\x08d\x88\x00\x00\x06\x1bIDATX\x85\xc5\x97{l\x95\xe5\x1d\xc7?\xcf{9\xe7\xb4\
\x14\xd4A\x85\x15\xc6^j\xd5\x92\xf0\x0f\x13\xa2\x12\x9d\xb7A\xe7.\xe8\x96\
\x18\xa3\x19\x05\xfcC\x83\x88nq`\xc4\x96\xdb\x1cc\x0b1[\x181\xa1\x93\x15\n\
\xb5\xad\xd1\xc9\n\x84a\n\x02\xdb(\x17/e\x8b6+\xd3\xf5r*\x8cy\xda\xd3\xdb\
\xb9\xbe\xcfo\x7f\xb4\xe7\xf0\x9e\xf6\xf42G\xe2\x9b|\x937\xcf\xfb\xcb\xf3\
\xfd>\xdf\xdf\xef\xf9=\xef\xa3D\x84/\xf31&\x12\xa4\x94Z\xab\x94\x8a)\xa5\\\
\xa5\x94\x9e\x00\\\xcb0\xdeQJ\xe5\x8d;\xb9\x88\x8c\t\xe0E\xc7q\xdc\xd6\xe6f\
\x89G\xa3\x92\x88\xc5\xc6\xc5@O\x8f\x94.[\x964\x95:\x01L\x1ak~5V\n\x94R\xeb\
\x1d\xc7\xf9\xd9\xd9\x93\'\x8d\xbcx\x9c\xf0\x91#\x18\xa6\x89\xb2,\x0c\xd3\
\xc44M\x8c!(\xcf\xbb\xe58\x18\xf3\xe6\xb1|\xc5\n\xb7z\xff\xfe?\xbb"\xdf\x11\
\x91\x81l\x1c\xd6\x18\xe4/9\x8e\xb3\xe5\xec\xc9\x93\xc6\xa4H\x84O\xca\xca \
\x1a\xc5\xb4\xed4,\xcf\xbb\xe9\xf3]}\xff\xe0\x03\x02\xd1(\x95\x95\x95&pW\xf5\
\xfe\xfd\x87\x94R\xdf\xcd&"\xab\x00\xa5T\x99\xe38\x9b\xcf\x9c8a\xe4\xf4\xf7\
\xd3\xfc\xfc\xf3H$\x82i\xdb\x88\xd6\x19\xd0\x1e\x88\xeb\x0e\xc2\xb6\x89\x1c:\
D\x8e\x08\x95\x95\x95\xa6\x88\xdc\xfdzuu\xbdR\xea{"\x12\x19S\x80R\xaa\xdcq\
\x9cMg\xde}\xd7\xc8\xe9\xed\xe5\xc2\xd3O#\x03\x03X>_v\xd2Q\x04\x89\xd6\xf4\
\x1f<H\xae\xd6\xec\xd9\xb3\xc7\x14\xad\xef\xa9\xa9\xa9\xa9WJ}\xdf+\xc2\x1aF\
\xbe\xc1q\x9c\x8d\x8d\xc7\x8f\x1b\xfe\x9e\x1e\xce\xaf\\\x89\xf4\xf7\xa7W\xae\
]7\r\xf1 =>L\x8c\xa95\xfd\xf5\xf5\xe4\x02{\xab\xaaL\x11\xb9\xb7\xb6\xb6\xf6\
\x8fC"\xa2\x19\x02\x94R\x1b\x1d\xc7\xd9\xd0x\xfc\xb8\xe1\xef\xee\xe6\xf4\xa3\
\x8f\xa2\x07\x060m{B\xabM\xc3+h(\x1d\xfd\x07\x0e0I\x84\xaaA\x11\xf7\xd5\xd5\
\xd5\x1dPJ=$"Qk\x88|\xd5\xec\xd9\xb37\x9c>v\xcc\xb0C!N,]\x8a\xdb\xd77H\x9eZ\
\xe98\xf6\x8f\x97\x96\xde\xb7\xdf&O\x84}\xfb\xf6\x99"\xf2@M]]\r\xf0\xb0\x12\
\x11\x94Ro\xed\xdc\xb6\xed\xe1\xe5\x8f=\xa6\x0e\xcf\x9fO2\x1c\xce\xa8\xf6\
\xe1\xb0F\x1b\xf3\xee\x84Q\xe2\xa7<\xfe8}\x05\x05L-(\xd0"b\xa6R\xa0\x02~?\
\x91\xceN\xe2\xa1\x10@\xc6\x8a&j\xbf\xf6\xd4\x89\x8cR\'\xf1\xb66|\x8e\x03\
\xa02j\xc0P\xeaj1\x9a&\x93\xe7\x16c]w\x1d\xbd\x7f\xfb;\xc9h\x94\x9c\xaf\xcd\
\xc2\x7f\xe3t\x0c\xcb\xc2\xb0,L\xcb\x82H\x84Dg\'\xf8|\x04\x8a\x8a0l\x0b\xb7\
\xbd\x03\x89\xc5\x10\x11\xcc9s\xc0\xb2\x10\xd3\xc4\xfd\xfcs$\x16\xc3M&1=\\Y\
\xfb\xc0\xc2\xba\x1a\xae\xbf\xed6\xe2\xa1.\x023\x0bh\xfc\xf6\x83|}\xf5j\xbe\
\xfa\xc3\x1fd\xc4\xf546\xd2\xbec\'7\xff\xfa\x15\xec\xfc|\x00\xdcp\x98\xcf~\
\xf1K\x92\xc1 \xd3\xca\xd6#\xae\x9b\x8e\x8f\xd4\xd6\r\n\xf0t\xdf\x11\x87\x91\
\x11\x08\xf0\x95E\x8b\xe8ki\xa1\xb9\xbc\x9c\x7f\xfc|+X6\xcd\x9b6s\xfa\xfe\
\x07\x88\xb4\xb6\x91\x08\x87yo\xe9C\xb4l\xda\xcc\xac5\xab\xb1\xf3\xf3iy\xee\
\'\\|f\r\xe6\x94)L-\xfd\x11n4\n@\xb4\xe9\x02\x9f\xad^\x83R\nk\xde<t2\x99\xc1\
7\xc2\x01\x1d\x8d\xf2qY97\xaf[\xcb7\xaa\xf6\x92\x08\x87\xe9\xbf\xf8\x0c\xdd\
\xe7\xce\x11\xe9\xe8\xc0\x8dF0\x93yt\x7f\xd8\x84i\xdb\xe4\x14\x16\x12\xbbt\
\x89\xd0\xa9SX\xb6M\xac#\x88\xdfqH\xc4\xe3\x00\xf8o\xbd\x85\x1b_\xde\x02\x86\
\xc1\xc0\xf9\xf7\xc8\xbd\xe1\x06\xbc\xa7\xcf\x08\x07\xfc3f`\x04\x02\xbc\xbfb\
%\xef\x97.\xc7\x0c\x04\xb8\xe9\xc7\xcfe\x06\x89\x90\x8c\xc5HD\xa3\xf4\x7f\
\xf2)\xbei\xd3\xc0\xef\xc7U\n{\xfat\xa2\xc1N\x92\xb1\x18\x00\xf1\xcb\xff\xe6\
?{\xabh{j\x15\xe1\xa3G\x07\x1d\xf0\xa4`\x84\x03\x89\xae\x10\x85\xcf>\x0b\xa2\
\xb9\xd2p\x0c\xc3\xe7#\xf4\x97\xbf\x0e\x0f\xc3M$\xd0\xaeK\xdb\xef+\xb9~\xe1\
\x02\xe6\x1f\xac\x07\xedb\xd8\x16\x97\xaa_\'1\x94\x82\xc4\xe5\xcb\x84\x8e\
\xfc\tkh\x8b\xba\x9e\x9a\xc8\x9e\x82X\x9cSw\xddM\xfe\xfd\xf71y\xee\\>|\xf2):\
\xdf\xfaC\xfa{\xeb\xef^\xc3\xcc\xcd\x1d4Bk\x82o\xbcA\xa4\xbd\x9d\xfc{\xbe\
\x89\xe1\xf7\xd3s\xf6,}M\x17\xb0ss\xe9\xdcUA<\x18$\x19\x8b\xa5[\xb9\x9bH\x8c\
\xed\x00@\xfc\xca\x15\x82\xb5u\xd9>\xd1\xfa\xda\xee\x11c\xa1\xc6F\xba\xcf\
\x9d\xc3\xf04\x1e\xd1\x9a\xd6\xdf\xeeL7\xa0T\xcf\xd0\xc9dF\r\xa4\x04\x88\x16\
\x01\xa5\x10\x86:\xc4\xff\xf8d\x1cF\xc3\xcf\x03O;\xd7Z\xa7\x1c\x10\xb8Z\x84\
\xf1\x0b\x1f}$S\x17,\xe0\xa6\'\x9e\xf8\xe2\xbf\xa9"\xb8\xf18\xc9X,\x03\x89!\
\xd83g2\xab\xb4\x94\x8f\x9b\x9a\x00\x12^\x07\xb6\xef\xa8\xa8x\xf0\x969s\xf2V\
\xed\xdae\x00\xf2\xcf\xdd\xbb\xd5\x17q\xc2\xeb\x86\x17\xb9\x85\x85,\xac\xaa\
\xe2\xd3\xd6VJ\x1eyD\x03/\xa4\x05\x88\xc8y\xa5\xd4\x925\xeb\xd7\x1f\x05\xae\
\x89\x88\x94\x1b\xa25yEE,z\xf3M\xfe\xd5\xde\xce\x1d\x8b\x17\xebp8\xbcVD~\xe3\
u\x00\x119s\xcdE\x00yEE\xdc{\xf80\xad\xed\xed\xdcYR\xa2\xc3\xe1\xf0\x0b"\xf2\
J\xea{\xc6.\xb8\xd6"&\x17\x17\xf3\xad\x86\x06\xda::\xb8\xb3\xa4Dwww\xbf("\
\xdb\xbd1#\xb6\xe1\xb5\x121\xb9\xb8\x98\xc5\r\r\xb4\x05\x83\xdc1H\xfe\x92\
\x88\xfcjx\\\xd6>\xf0\xff\x8aH\x91\xb7\x07\x83\xa9\x95\x97\x8b\xc8\xb6l\xb1\
\xe3]Ln7\xe0\xe8\x8e\xad[\xf3V\xad[g\xf4\xb6\xb4L\x80\x1e\x023f\xd0z\xf1"\
\xb7/Y\xa2\xbb\xba\xba6\x8a\xc8\xcb\xa3r\x8cw9M\x89xr\xd9\xb2I\xb7\x16\x16*c\
\x1c\x0f\xb4\x08\x03\x91\x88\xda^Q!]]]\x9bEd\xcb\x98\xf3O\xe4v\xac\x94Z\x00\
\xfc\x14\xf01\xb1F)\xc0;"\xf2\xea\xb8s\x7f\xd9\xd7\xf3\xff\x02\xd2\x03\x81!L\
\xea\\\x97\x00\x00\x00\x00IEND\xaeB`\x82N\xd66\xe3' )

def getstop_fitBitmap():
    return BitmapFromImage(getstop_fitImage())

def getstop_fitImage():
    stream = cStringIO.StringIO(getstop_fitData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getmove_upData():
    return zlib.decompress(
'x\xda\x01\xeb\x01\x14\xfe\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\
\x10\x00\x00\x00\x10\x08\x06\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\
\x08\x08\x08\x08|\x08d\x88\x00\x00\x01\xa2IDAT8\x8d\x95\x93\xbbK#Q\x14\xc6\
\xbfsg&\xaf\x99hb\xa2\x0e\xc6\x185(1\n\xab\x95V\nb\xa3\x12\xc4b\x05\x1b\xff\
\x03\x0b\xb7\xd9\xffC|4\xb6\x96>a\xb7\xdeb{\xb1Zaq}\x9b\x87\x8eo\x8d\xebc\
\x8e\x8d\x06\xcd\xcc\xa89p\xe1r\xf9\xee\x8f\xef|\xf7\\03\x9c\x16\x00\xbf\xaa\
\x06\xda\xdf\xd3\x088\x14\x11\x85\xf5\xfa\xb6_\xc9\xce\xde\x1f\x95z,\xe5\xa4\
\x93\xed/\xfb\xea\xd4p\xd3\xcf/\x83\x13\xad\xad-\th\xda\xdc\x8c\xae7R&\xf3o\
\xf5C\x80\xdb\xedOz\xab\xea\x97\xc2\x1d\xa3\xcd\xc7g\xb7Hg\rt\x0f\x8f\xd7\
\xba\\\xcatu\xa4Ad\x0f\xb6\x96\x1d\x01._y\x97;\x14\x9f\x0f\xb5\x7fm$\x92`\
\x9c^ \x9d5\xa0\xa9^\xf4\x8d|\xab\x95$y\xaa:\x1a\x17\xd9\xbd\xcdE\x0b\xc0\
\xa3V\xf4{*[fCmC1\x80\n\xd0\xc3\x9c\x01M\xf3\xc2\xaf\xf9\x90\x1a\xfb\x1e\x11\
B\x9e\xac\x89\xc6\xe9pos\x01\x00\xe89m(j\xc5\x8a\xec\t\x04\x01"w \x12\x0b&\
\x06\xa2/\x90P\xb0\x0c|\xb4\x969O\xff\xf9\xebq\x89\xc7\\z\xf7*w\xb0\x9dz\xe3\
\xe0\xfe\xfad\xe8e\xaf\xea\xc9u\x00\x05\x80qz\x81\xfc\xce\xc6ef\xe3wwqf\xf6\
\xcf\xc8d\x16\x1f\xe5\xf3\xb7d\'u\x9a\x03\x0b\xc04\xcd\x12\x00\xf4\x1c\xcc\'\
\xca\xc1\x81\xb5\x050Ji\x81-\x00&.\x01\xc0\xb0\xb6`\xda;\xb0\xfd\x0b\xfcx\'\
\xff?\xdf\x07A\x00B\x80\x88\xc0\x0fy\xc5N[\x18\xa4\xd7\xa5x\xfd=\xa6\x90\x12\
\x12\xcb\n\xc02\x0b\xa1\x10\xf3\xcd\xdd\xf5\xf1t\xb1\xf6\t\xad\xec\xa6\x05\
\x0c\xb2!\x83\x00\x00\x00\x00IEND\xaeB`\x82 \xc8\xda\x11' )

def getmove_upBitmap():
    return BitmapFromImage(getmove_upImage())

def getmove_upImage():
    stream = cStringIO.StringIO(getmove_upData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getcalcData():
    return zlib.decompress(
'x\xda\x010\x02\xcf\xfd\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\
\x00\x00\x00\x10\x08\x06\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\
\x08\x08\x08|\x08d\x88\x00\x00\x01\xe7IDAT8\x8d}\x93\xcdk\x13Q\x14\xc5\xcfL\
\x1e)\xc9t\x11\xc9|d\x12^\x12\x9b\x8c\xc5V\xc1\x881!uct\xe3R\xb0\x88\x05\xd7\
]v\xab\x7f\x8a[[\x1bM\xb5*\x08\xae,QAP4\xad\xa6MK\x91\xa2\xd4\x0f\x8c\x1f\
\xb8\xe8d\x88\x8ds]\xd4\x0c\x99f\xa6w\xf5\xe3\xbdw\x0f\xf7\x9c\xf7\x9e@D\x00\
\x00A\x10N0\xc6&EQ\x1c\xc2\x01e\xdbv\xa7\xdb\xed.\x10\xd1\n\x00\x08=\x81p8\
\xdc\xba|e2\xba\xb3c\x8a\xa6iz6K\x92\x84\xe1a\xc9\xbeSY\xf8\xd9n\xb7U\x00`\
\xbdM\xcb\xb2\x14\x9eL\xe1\xc6\xecc\x90\xc4=\x05\x04\xf3#\xa6\xaf^\x10-\xcbR\
zk\xac\xff\xc0\xc6\xe6\x16\x02Z\x1eC\x91\xa4\xa7@\xe7w\x0c\x1b\x9b[\xae5\x97\
\x80\x1eS\xb0[_\xf3q\x0f\xec\xfez\x0f\xbd8\xee\x9e\xaa/DzU\x7f\x81\xf9\xf9\
\xbb\xf8\xfc\xe5\x9b\xa7@"\xaeaj\xea\x12N\x9f,\x81\x88\x04\x00\x10]\xe30\x86\
\xaf\x9f\xb6Q*\xe4p\xfd\xda\x0cD\xfb\x8f\x8bS<\x8eP(\xe4o\xa1\xf1\xae\x81Z\
\xed9\xea\xf5eD\x0eE<\xb9|\xfe\xac\xbf\x85\xc6\xfa2\x9a\xabMh\xba\x86h4\x8a\
\xe6\xda:TM\x85,\xbb\xf9\xf8\xd1\x9cc\x01D\x84\xff"T]\xac\x10\xe7\x9c\x8cQ\
\x83\x1e<\xbaG<\xc9\xe9\xc8\xa8A\x8b\x0f\xab\x0e\xbfy\xfb\x92\xf6\xda\xf6\
\xfa\\\x16\x0c#\x8bB\xa9\x80c\xe3c8\x9cNc\xe2\xcc\x04FF\xd2\xc8d2\x0e\x07\
\x83A\xff\x0c\x18c(\x16\xf3H\xa5\x92\x10\x03"N\xe5s\x03<P\xfd\x16*\xd59\x92\
\x15\x99t=F\xb7n\xdf\xf4\xe4\x95\xd5\xd7.\x0b\x03!>\xad=C"\x11G\xd6\xc8\xfar\
\x7f\x88\x8e\x80$\x85\xb7\xcb\xe7\xca\xaa\xa2\xca\x01\x8f7\xe4\xd4\xf7\xd6\
\x8f\xbfKO\x96Z\xa6\xd9\xe6\xfb\xaf1\r\xe0"\x80\x03\xbf3\x80\x0e\x80\xfbD\
\xf4\x01\x00\xfe\x01G\xce\xf2\x1d\xe2\xdc\xd9\xc6\x00\x00\x00\x00IEND\xaeB`\
\x82\t\xca\xfb[' )

def getcalcBitmap():
    return BitmapFromImage(getcalcImage())

def getcalcImage():
    stream = cStringIO.StringIO(getcalcData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getstart_fitData():
    return zlib.decompress(
'x\xda\x01\xd4\x02+\xfd\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00 \x00\
\x00\x00 \x08\x06\x00\x00\x00szz\xf4\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\
\x08d\x88\x00\x00\x02\x8bIDATX\x85\xed\x96\xbbk\x14Q\x14\xc6\x7f\xe7>\xe6\
\x114\xd9M| (b\xa9\x16"v\x01\x15\x0b\x15T\xc4\xd2^-\xed\x84\xa0\xa0\x9dV\x82\
\xa4\x10AD\xac\xfc\x03|5b\xa3\xa2`\xa5\x8d\x88\x88\x8a\x82\x8aI\x8c\xd9M\xf6\
93\xc7b7!j&\xd9\xe0#\x10\xf6\xc0\xe1\xdc\xb9\xf7\x0c\xdfw\xbe\xb9\xf7\xdc\
\x11Ue)\xcd,)z\x97@\x97\xc0\xb2% ";D\xc4.\t\x01\x11Y\x01<\x03.u\xf4\x82\xaa\
\xfeU\x07\x06\x80\x0cH\x81c\x0b\xe5K^\'\x14\x91\x8d@\x04H\xdb\xf9%\xe6\xcd\r\
\x00\xf7\xf7\x1e\xda%\x0f\xee=nfY\xb6GU\x9f,J\x01`\x0f\x90\xb4\xab\xc8\x16\
\xe9i\x18\x05\xc9\xbd\xe7\xd7\xb3\xfdGv\'\xde\xbb\xaf\xc0\xfa<\x05\\\x0e\xaf\
M\xd6\x93\x1d\xbc\xb0\xd6\x856\x92\xc0E\x04."\xf0a+\xbav\xf4\xed\xf9Y\x1e\
\x051}\xbd\x05Y\xb9\xc6qf\xf8\x84\xbcy\xf5\xae\xf7\xc3\xdb\xcf\xb7DdPUk\xbf\
\x02\xe5mBg,J_\t\ne\xa4P\xc6\x14\'\xb1\x85\n\xb6X\xc5\x15\xeb\xf8b\x1d_l\x10\
\x14\x9b\x84\xfd\tQ\x7fJ\xd4\x9f\x11\x163\xd1\xb0*\x13\x95Q\xa9kY\xce\xdf8\
\xe9\xc3\xc8o5\xd6\\\x9b\x0b(\x8f\x80\x15\x8b*\t\xf5d\x92rm\x8cRu\x8c\xd2t\
\xec\xc0\'ZQz\x06D\xce^9\xeeT\xf5\xa8\x88\x9c\xfa\xad\xd2\\\x02\x86\x99\xdd\
\xa9(\xf5\xa4B=\xa9\xb4\xa5\x8e\t]L\xd8\x8c\t|L\xd8\x8c\x08\xdd\xf4\xb8\xbd\
\xe6c\x02\x17\x13\xb8X6m_\xc5\xce\x83\xdbxx\xfb\xf9i\xe0b\x87\x04d\xce\x85FR\
\xa3\x91\xd4\xa8\xd9\xa9\x16\xe8,\xc0\xb0\xd9\x02\x9d\x19\xfb\x88\xd0E\xfa\
\xf2\xfe\x17}t\xe7\x85\x02\xe7:V\x003s"\xe6\xb4f\xd2\xa0\x994\xb0f\xaa\xadH\
\xd4\x02nUM\xe4c\xbc\x8ft\xf4MM\xaf\x9e~\x94\xaa\xea\xb0\xaa^\xee\x94\x80I\
\x1b\xc8\xc7\xa7\x99\n?+!\xb3\x1f\x05 \x03i`\xa4\x84\xb3\x01\xde\x06\x14\xd6\
\xf6\xb0aK\x1f\xf5q\xa37\x87^5\xd3L\xef\x02Cs"\xe5\xf4\x81A1|6\x961c\xf9f,\
\xe3b\xf9.\x96\t\xb1L\x88\xa1$\x86\xb2\x18&\xc50%\x86\x8a\x18\xaa"\xd4D\xa8\
\x8b\x90\x1e8?\x90\xf6\xae\xf3U\xeb\xe4\x19\x10\xe7v\xce\x7f\xd0\x8a7\x03i\
\xcfj\x1a\xc6\xf2\x1eX=_~\xde\'\xf8\x13\xb3\x00\x951\xa6\xc8\xd8\xa7\xaa#\
\xf3%\xff\x8b\xebx\x04\xf8D\xc6aU}\xbdPr\xeee\xf4\xbfly\xfe\x11u\tt\tt\t,\
\xc6~\x00\x9c\xd4\xecVV\xa3\x88a\x00\x00\x00\x00IEND\xaeB`\x82ECF\x9d' )

def getstart_fitBitmap():
    return BitmapFromImage(getstart_fitImage())

def getstart_fitImage():
    stream = cStringIO.StringIO(getstart_fitData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getplottingData():
    return zlib.decompress(
'x\xda\x01T\x02\xab\xfd\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\
\x00\x00\x00\x10\x08\x06\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\
\x08\x08\x08|\x08d\x88\x00\x00\x02\x0bIDAT8\x8d\x9d\xd0;hSa\x14\x07\xf0\xffw\
_y]S\x9b\x87is\x1b\xdb\x8aZ\x8dC+\xdaZ\x04\xad`\x1d\xd4,\x0eR\xa1C\xa1\xe0$8\
gPgA\xa1\xa3\x82\n\n..\x11J\xc5\xa1\xa8\x99R\xad\xa8\xad\xa2\x16[_\x89\xb9V\
\xf3h\x9a\xa7\xb977\xc7\xa9\x10JRS\xffp\xe0;\x1c\xce\x8f\xc3\xc7\x00\x8c\x03\
h!\xa2\t\xfcG\x18\x80\xa0`i=\xe3\xda}\xa2\xbd\nJ\x1a\x86\x1e\xd3V\xe3\xf7\
\xb2\xd1\xd9P3\x80\x00\x00&\x8e\xf7\t\xce\x1d\xed\xbc$\xfb\x18\xc7\xef\xcfGg\
=\x01\xc6FK@\xfc\t\xd1\xc5\x7f\x02R!\xb9t\xfe\xd95OD\xb2\xa6\xdf\x1d\x1c3\
\x8b\xa2\xc5\x1f\x00\x0e\xa5\x80\x8a\x9b\xb1\xbb\t\xa2\xd7\x8d\x00\x0e\x00V\
\x80H\x88\x8c\xb3\x1f\xca\xb9A\xbd\x94^\x14\x9c\xdd\xf2C\xc1\xfc)\x02L\'\x81\
\xf9\x8d.\xe0\xd6\x1esD\xa1(\xd1\xe7j\xb9\xb0\xc4K2\x9bQ\xfan=":EDFS\xc0Z\
\xf4b\xea#\x00\x98\xec\xde\xc1\x8d\x16\x1b\x02\x7fR_\xeek\xb9_9\xc9\xee=jvt\
\xf5l\n\x18f\xec\xc2XV\x9d\x14\xe3\xafT\xa9Eq[\xdd=W7\x058\x81\x93C\xc0\x9e\
\x81\xe8\x0bQ\xcb\xaa\xaa\xec\xeb?\xdd\xd1\xe6\x9f\x1eal\xea\x08c\x81z\x80P\
\xdb\xa8\xc0\xcdI\x00\xe9\x8a\xf68\x1f\x7f\xa3\xdb\xbb\x0e_\xe7{G\x86\xd3s\
\x0f\xe0\xfa\xbd \x00\x98Z\x0f0\x00A\x00[\x89(\xb8~\xb8e{\xff\xb9V\xe5\xc0m\
\xde\xd1i\xd3\x96\xdf\xa7\n\x99\xd8\x9d\xc2\xcf\xb7\x13zqe\xb9)\x00\x00do\
\xef1\xb3k\xe7e[\xdb\xbe!N\xb4\xf2\xe5L,\xab\xe7\x13/\xb5\xd5\x1f\xcf\xb3\
\xdfg\xae\x08\xf5\x96j\x93W\xe7\xc3\x00\xc26\xcf\xde\xd1\x0e\x9b\xf3\x06\xb9\
v\xc9&\xa5\xefxA\x10\x15\xfa\x16\xb9$\x00p\x00\x18`\x8c\xd5\xbd\xa0\xe6\xb3\
\xb6u\x02&\xdb\xd7\x08\xf7\xd4$/\x14yIe\x8c\xf9y\x00\x16\x00^\x00\x15\x00\
\xe6FU\x05\x8c\x14PT\x81D\xc6\xd0\xc2U\xbd\x14\x03\xb0\xf8\x17\'g\xc69w\xdb6\
\xb4\x00\x00\x00\x00IEND\xaeB`\x82\x870\x07\x0b' )

def getplottingBitmap():
    return BitmapFromImage(getplottingImage())

def getplottingImage():
    stream = cStringIO.StringIO(getplottingData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getdeleteData():
    return zlib.decompress(
'x\xda\x01\xae\x02Q\xfd\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\
\x00\x00\x00\x10\x08\x06\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\
\x08\x08\x08|\x08d\x88\x00\x00\x02eIDAT8\x8d\x95\x93MHTQ\x14\xc7\x7f\xf7}\
\xcd{\x93O\x1b\xcb\x95L\x1a\xa28c\x1a&(I-#P\x82\xb0E+A\xf7E\x11QD\x04\xad\
\xabE\xd0f(\xb0M\xb4l\x9b\xd6F\xc42\xc3\x11M\xf3\x8b\xc1E\x81\x9b\x06\xc6qlj\
\xde\xf5\xbd\xdbf\xde4N\xab\x0e\\.\x9c\xff=\xe7\x9es\xcf\xfd\xa1\x94"\\\x80\
\x00N\x03F\xb5\xbf\xac\xe9eM\x1c\xf2W\x1dh\xecmj\x9a{88\x98\x1bhn^\xb5t\xfdd\
\xa8E\x0c#~\xae\xbd}\xf9\xd9\xe8hn\xb0\xa3#\r4\x85\x9aPJ!\x84h<\x13\x8b\xbd{\
:0\xd0\x17\xab\xaf\xc77M\xae\xcf\xccl\xce\xef\xec\x0c\x0b!\xbc\xb3--S\xaf\
\xc7\xc7\x13\xae\xebR\x04\xae\xa6R\xcb\xd3\xeb\xeb\x17\x94R?\x04 \x92\xd1\
\xe8\xa7\xc7\x89D\x7fc]\x1d\x86\xe3`\xda6\xbeeqmvvK\xd3\xb4`bd\xa4\xb3\xdeu1\
\xcbZ\x11\xb8\x92J-|\xccd\xfau\xa0\xe7\xb2\xeb\xde\xee\x8eDl\x15\x04(\xdf\'\
\x08\x02t\xa5\x18nm=v\xa9\xad\xed\xb8%D\xc5\xaf\x82\x00K\xd3\xf0\x94\x8aN\
\xad\xad\xbd5\x80\xaf\x1f\n\x85o\x17m\xfb\xe8\x11)\xf1=\x0f3\xdc\x1d\x07\xe1\
\xfb\x94|\x1f_JL)\t\xa4\xa4X,\xf2&\x9d\xfe\x0e\xac\n\xa5\x14\x96\x10\xf1.\
\xc3\x98\xbc\x17\x8b%\xeb\xa2Q\x0c\xdb\xae\x94\x1b\xb6d:\x0e\x86\xe3\x10\x98\
&7\xa6\xa77?\xef\xec\x0c\x15J\xa5mQ\x9e\x00\x96\x10\xf1\xa4\xa6M\xdeohH\xdaa\
`M\x12\xdd\xb6\xb9\x95No\xa6\xb3\xd9\xa1}\xcf\xdb\x060\xa82\x15\x04\x94\xf6\
\xf6\xa0\xaa\xdc\xb0\xa5@J4\xcf#88\x80\xf2\xa5\x84\x9f\xc2\x12"\x9e\x80\xc9\
\x9b\x90\xb4\xca\x82\x1e\x89\xfc-\xbd\xaa%\x15\x89\xf0 \x93\xd9\\\xda\xdd\
\x1d\xda\x97r[\x00z\',\xde\x81\x1e\x8b\xc3&\x84\xf8\xe7\r\xc2$w3\x99\x95\xc5\
|\xbe\xd7\x00\xba\xfa\xe0Dm0\xc0\x81R\xc8b\x11_\xca\xca\x14\xc2\xe9\x9cw\xdd\
\xf8b>\x7fJ\x03V\xe6a\xebgM\xb0\x07<\x82\xad\'\xb0\xf1KJJ\x85\x02\xbf\xf7\
\xf6(\x15\n\xe4\xf2y\xdeg\xb3\x19\xe0K\x85\x83\x04,<\x07\xf5\n\xd4KP=\xb0a@\
\x9b\t\xf1nX\x9b(k/t]u\xe9\xfaR\xc8\xc3!\x98:`n\x0cr\x9d\xb0j@\x05&\x13\xe2\
\x9d\xb0<\x06\xb9v8\x04S-\xb2\xff\x8d\xf3\x1f\xd6Eo5\xb7\x8a\xc2!\x00\x00\
\x00\x00IEND\xaeB`\x82\xd6\xac3\xa1' )

def getdeleteBitmap():
    return BitmapFromImage(getdeleteImage())

def getdeleteImage():
    stream = cStringIO.StringIO(getdeleteData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getopenData():
    return zlib.decompress(
'x\xda\x01l\x06\x93\xf9\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00 \x00\
\x00\x00 \x08\x06\x00\x00\x00szz\xf4\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\
\x08d\x88\x00\x00\x06#IDATX\x85\xc5\x97]\x88\x1eW\x19\xc7\x7f\xff\xe7\x9c\
\x99\xf7\xdd/\x1b\x93%\xd0\x96@\x8c\xed\x16\x92\x94\x04\xc1\xb6\xc4\xb4\xb5\
\xa5\xc6 \x8a\xe0\x8d R\x08R*\xf4\xce\x9bz\xe1\xb5\x82 \xde+^\xd4\x8b\x82\
\x17\xa2)Th\xa1Ez#\x9a&\xb6I\xa3\xc64!m\xdcn\xb3I\xb7\xe9f?\xdf\x99y\x1e/fv\
\x93\xb7I\xc9nor`\x9893g\xce\xf9=\xff\xe7c\xce("\xb8\x93\xcd\xee\xe8\xea@\
\xde\xcc\xe0G\x1f\xfd\xde\xd4C\x0f\xed{v\xe7\xce\x1d\x8f\x15E\xeau\xb7\x03\
\x14\xd1J\x19f\xf2\xae\x0f( \x02p\x90OO\xcf\x9c9q\xe2\xf4\xd1\x97_~\xe1\xe8\
\xe7\x02x\xf2\xc9G~\xf6\xfc\xf3\xcf=\xf5\xee\xb9\xf3yqy\x19B!\x11-\x04\x81\
\xf0/\xde\xb5\xa5\xde\xf5\xa5\x9d+\x92\xbc]\\nf\xde\x8d\xd9\xff\xea\xaboLm\
\xdf\xbe\xf7\xef\xb3\xb3\xef|\xb8)\x80\xc9\xc9\xfd\xf7\xbe\xf8\xe2\xaf\xbf\
\x16\x11\xe9\xe8_^\x998w\xe1B\xf1\xa9!\x01\xb0o\xef\x83K\xcf=sd\x16Pg\xbd\
\xdc]\xad:\xa6C\x87\x1e\x1b{\xfc\xf1\x03G\x80_l\n\xa0(t\xcf\xae];\xb6FDs\xf8\
\x1bO\xac\xcc\xcf/\xae"\xbc5\x1co\xe5Vl\xdb\xb6\xb5\x8a\xf0\x04\x92$\x8f\x08\
\xb50\x84\xbb\xcb\xcc\xb4}\xfb\xe4\x96\xb5y7\xe5\x82\x08,\xc2y\xe0\xbe\xfb<"\
\x1c"Z\xa9\x15\x92\xdak\x99\xb7\xe3B\x12\xeb\x10kgw\x97$m\x1a \xe7,wO\xddd23\
\r\x06\x15\x12.\xc9\xdd\xdb\x07 \xab%\x07\x1c\xc2$\xb9d\x81\xe4\xfd^\xaf\x81\
V\x9b\xcf\xa5\x80\x84E\x04\x92XYY\xd5+\xaf\xfd\xb5X\\Z\x12\xac\x07"7\\\x0f\
\xdd\xeb\x95\x85\x7f\xe7[\x87\xaf\x8e\x8f\x8d\xd7C\x86\x01\x1c\xfe\xf2\xf8S{\
\xb6/~\xbfL\x14\x91\xb6H\xa9\x08r\x02+\x82\x94@\x05_\xdf\xd5\x9fl\x9a\xbal\
\xea\x1a\x17\xb1\xb2\xbc\xcc\xdb\xa7O\xa7\xb9\x8f\xaf\xb2\x81b\x16#\xfd~\x1c\
x\xe4\xe1\x18\x1b\x1d\xbb\xda\xc5\xc5u\x80o\xde_\xff\xf2\xe9\x07\xd9\x87\x00\
[\x80\xdc\x0b\x95\xfdP\x99CE\x0e\x95\xbd89\xdb\x97A2\xb5\x8bM\x8c\xf5\xf8\
\xc9\x8f\x8f\xb4\xf9\xaeu\x85\xba\xb3\xc2\xa46\t%\x90\x90\x8c\xa2(\xbeP\xd7\
\xd5\x92\xd9\xa7\\0\x9a4\xc9\xda4^\x83\x0bj\x03k\x8f\xa8\r\x9a\x04\x12\x81\
\x08w\xea\xa6&\xe7\xac\xf0@R`\x9d\xe0\xed\xdc2\x81PH\xd6v@)%\xea\xbaY+`\xd7\
\x01\xa45\x1b\xdat\xa1\xae\x04F\xc8`\xed\xa8\xdb\xb4\xaf\x9b\x86\xffM\xcfp\
\xf2\xf4\xbf\xe8\x82\xb0{/\x80n\xa25%\x90\x02B\x82\xf1\xf11\x9e8x\x80\xb27j\
\xb7\x0b\xc2\x16\xa2\x19\x10\x920\x81\x8c\xf0\x02$\xdc\x9d\xcbss\x1c\x7f\xeb\
\x14K+\xcb\xb7\xf3\xfd:\xce\xe4\xe4\xd68\xf8\xf0W){\xe8\xa6\x18\xb8U\x8b\x08\
\xd1\x0c"*\x93dD\xdd*W\x96%\xfb\xf7\xeef\xf7\xd4\xfd,,.\xf2\xda\x0b\xbfb\x8b\
}\x84\xe5\x1e\xe4\x02+\xfaD*\xb0\xa2\x87R\x01\xa9@\xb9\x84T\xe8o\xaf\xffQ\
\x91\x8b\xbbv?0\xfa\xc3g~\xf4\xf4\xe8o\x7f\xf7\xfbg?\x0b\xa0U\xc1\xbd\x85\
\xa8M4\xd5\xfaC\xb3DQ\xc2\xf1?\xff\x89\x1fL]$\x8f\x8e\xa12\xa3\xfe(V\x8e@1\
\x02\xe5\x18\xea\x8dAo\x0c\x95#X\x7f\x1c\x15}(Fl5\xac\xdf\xef\xdb\x9e\x9b\
\x14\xf8\xe7L\xe6\xfd\xf9Da\x00!\xd6<\xaa\x9a\xca\xe7\xb8\xf0\xf3o\x93z}\x1a\
\x12\x95\'\xee\xdeV\x10S}\x9a\xd5\x04.\x14]Qv\x11a\x10BM\xa0\xda\x91C9*,\x15\
\xe0\xe8\xda\xb5\xe5\x0fn\x02\xb8\xb4h|wj\xf5\xb35\xc9\x17Q9F\x94\xa3P\xf4\
\xa1\x1c\xc1+#\x941\xcbD= R\x01\xac\x02\t\x94 \x0c\x94\x91e\xca\x91q\xf0\x06\
9\xcc|\xf8\xf1\xc5!\x80\xe5JL\xf4\xa2\xf3\x7f\x1b\xf8\xc3A\x0145Q\xad\\\xf7-\
 \x1cu\x19+S\xfb^\x12*\x12\xe4\x84\xfa%*r\xdbo*\xa2\x1e\xe0\x18g\xcfN\x0f\
\x03\xfc\xfbJb\xf7d\xd3\x1a{\xab}\x92\xd6(\x1cy\r84Uw\xd4D]\xa1\xdc\xb4\x16*\
\xb0\xa8\t\xafQwD4\xd0\xd4\xd0\xd4\xcc\\\xba\xa6w\xcf\xbc\x7fl\x08`n\xd9\xf8\
\xca\xdd\xf5-V\xbe\x11B\xc8k\x9az\x80\xea\x01\xb2\x0c\xde\xe0\xf5\x00H\x98\
\x15\x80\x81e\xe4Bd`\x89pH\x18e.\x01\xd7\xb17\xcf\xaf\xbeu\xfa\xcd\x7f\x0c\
\x01p\xbd\x18}v\xebj\xbe\xbc\x86j\x15\'!\xcb\x04\x86H4\xd5\n&#,\x81\x03\x18\
\xf2 \xc2p\x8cT\x8e\x90R\xc5\xecG\x0b\x0b\x11Q\r\x01H\x1b\xdb\x1dG\x04x\x8d\
\xbci\xfd\x1f\x8e\x19`\x81\x04)\x1b$\x119a\xd9PY@\x99P\x910j\xa2\xa9\xb82\
\xb7<\xbf6_\x06h\x02\xd2\x06\x04\xe8\xbe.\xd04D\xaa\xb1.\x06\xa2\x1a\x80\x15\
\x90*\x9aj\x15K%j*\xf0\x02\x9a\x01Qg\xc2*\xa8*d\x15\x97\xaf,-\x0c\x01\\Z\xa0\
<\xb8\xa3\xf3\xff\xed8\xd6!\xaa\xd6\xf7\xa9Di\x80r\x89W\x03\xa4D\xa8@\x88PBa\
\x10\t\x91P\xee1\xff\xc9\x02\xd7\x96\xb92\x04Py\xea\xdd3\xe1\x1br\xc1:G]\x11\
\x96Q=h\xcf\xb6J\x90\x90%\xdcV\x90\xa56\xffC\x84\x0c\x93\x91}\x94\xb7\xff3\
\xcf\x96m\x93\x1f\x0c\x01L\x94\x9e6d\xfd\r*\xc8\x84\xe1\x08\'pD\x83\xa5.\x85\
MX2\x94\x05e\xc6r\x86\x9cQ\xd4\\]LLO\xcf\x9e\\\x9b\xca\x00\xc6\xcbh\x83qS\
\x7fij\xf7\x0e\xd1\xa0h\x90\xb7y\x1eM\r\xdet\xcf\x1c\xbci\xebA\xb45\xe2\xcc\
\xf9\x99\x85\x97^:\xfe\x9b!\x05Fr\xa4\xce\xb0\r\x8b\x00N4\xe0\xd5\n\xc2\x90\
\xda\xd2\x1bm\x0f\xf7@\xde~\x07\xa2\x1f\xc8\x1d\x06\x03N\x1c;u4\xe2\x9d\xc1\
\x10\xc0\x7f\xe7\xd2\xec\xdc\x8a\xdd\x9b\xb8\xbe\xad\xdaH\x0b\x81\x06\r*k\
\xa2Z\r\x15\x86\xaa\x04\x85\x11\xa5\xa1\x81P/"\x96\x1b"U\xfc\xe1\x8d\xb3\x9f\
\x9c\x9b\xbe\xfc\xd3!\x1d\xbb]no\xcf\xe4\xc4!\xb3\x94\x00\x8c\xb4\t\x8c\xb5\
\x96P\xceAj\xaf\xaf\xdfN4\xe4 bp\xea\xbds\xafG\xc4\xd0\xd7Nw\xfa\xf7\xfc\xff\
lp\xf8\x9a\td\xd6:\x00\x00\x00\x00IEND\xaeB`\x82F\xfb\x0f\x01' )

def getopenBitmap():
    return BitmapFromImage(getopenImage())

def getopenImage():
    stream = cStringIO.StringIO(getopenData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getsimulateData():
    return zlib.decompress(
'x\xda\x01\t\x05\xf6\xfa\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00 \x00\
\x00\x00 \x08\x06\x00\x00\x00szz\xf4\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\
\x08d\x88\x00\x00\x04\xc0IDATX\x85\xc5W\x7fhVU\x18~\xdes\xde\xfb\xed\x87\xa8\
c\xe2\xd4\xb601#\xd3\x86\xd6"]\x96\xe9\xb2\x08\x11\xca\x9a\xeb\x87\x94"\x16I\
\xcb\x7f$!\xa2P\t5\xb1@\x123\x94\x95\x0b\x1aeE\xa9\xa5\x14aY\xd4\xe8\x87?\
\xe6\xfa\xa1\xa6dn\xb2\xe9\xd45\xdb\xb7}\xf7\xde\xf3\xf4\xc7\xfd\x96\x9a\x9b\
\xfb\xbe\xcfI\x07\x0e\xf7\xc2\xbd\xe7y\x9e\xf7y\xdf\xf3\xdes\x85$\xfe\xcf\
\xa1\x99.\x14\x91[Ed\xb11\x12\x00Bc \xdd\xbd\x17\x86!\x9d\xc3V\x92\xd5}&@D\
\xfa\xc7b\xde\xbbc\xc7\x8c\xb8\xea\xc61#\r\xc4\x00\x84\x00\x06\x10\x01`@\n\
\xfe8\xda\x88/\xbf\xaa%\x80\xfa\x9e\xb02\x12`\x0c^\xcb\x1b\x98;d\xc7\x96e&??\
_\x00\x85\x88\x8d\xe0DA(|\x9f\x980i\xb6\xaf\xaa\xf5A\x10,\xef3\x01"2K\x04\
\xb37m\xa8D~\x9e\'`\x1c\x02\x05i"!\xc6#`\xb1d\xd9\x06\xd6\xed?\x10\x84aXA\
\xd2\xef\x13\x01"R\xa4j\xdfx\xfa\xc92L\x9bz-. \x17\x85\x88G:\x1f;w\xd5s\xc5\
\xaa\xb7H\xb2\x92\xe4\xc1Kb\xa6\xba\x0bD\xc4\xa8\xca\x17\xa3F\x0e\x99\xf0\
\xe3\xd7\x8b\xbdXV\xb6\x80V$i\xb9\x88\x02\xe2\xf1Lk\x9ccnz\xc6ojn\xdd\xe2\
\x9c+\xef\r7\x1d\x07\x16\x89\x98\xd2\x9a7+l\xcc\xf3EH\x90\xc9\xbc#"\xa7\xf31\
\x7f\xc1Zw\xeat[\x0b\xc9\'R\x01MI\x80\x88\x8c7F\x96\xad\\2\xc5\x8e\xbd~\x00\
\xc8x\xb4\x94\x16\xa4B\x8c\x92\xceGUu-?\xfc\xf8{!\xf9\x08\xc9\xd3)a\xf7\x96\
\x02\x11\xc9\x89\xc5\xcc\x9e;J\x8bFl\xdf<\xd3B\x92\xb6S\x05\xd2\x15\xbd\xf2\
\xd0\x913\x1cW\xfaJ\xd0\xd1\xe1\xaf$\xf9B*\xe4@j\x0e\xac\xca\xc9\xd6k\xaa\
\xd6\xdef\xc9v1H\x92C\x01D)\xf0}\x83\x87\xe7T\x07a\xe0\xf6\x01X\x9a*y\xaf\
\x02Dd:\x80\xa76\xae)\xc1\xd0\xc1\x10A\x1c`D\xcc\xae\xdc\xc3b\xc9\xf2Z\xec\
\xab?\x1e\x86!\xe7\x00P\x89\x9aB\xb7\x9d\x11\x00\x01$\x98\xb4\xbe\xc7\x14\
\x88H\x81\xa7\xf2\xf3c\x0f\x15\xe5\xad_=N\x88\xc8zP\x05\xc9\xa6CQ\x9cl\tP8z\
\x13]\xea\xdf\x14\x02x\x87\xe4\xecK\n\xf0T>)*\xcc\x9e\xbaw\xe7\xcd^nNvr\xbbY\
\x91\x7f\xab>\xda~\x84\xc5w?\x9cb\xdbY\x87\xa8\x15\x1b\x006\xd9\x19m\xd2-\
\x83\x8eNr\xe1\xb3\xdbx\xac\xb1\xb5\x1d\xc0=$\xbf\x05zH\x81\x88,0\x06\xd3j\
\xd6\r7\xb9Y\t\x11\x10\xa0\x05\x18E\x8d\xf3\xec\x17QL,\xe9\x7f\xae a\xd1u/F\
\tX\xb4\xc7\xc1\x19\x15\xef\x07M\xcdm\x7f\x03(#\xb9\xbb\x8b\xeb"\x01"2\xdaZ\
\xac~q\xd1\x10S2>\x0bd\x02`\x10\x91!\x02<\'@\xa3\x9aH\x12F\xc5\x19=\x17Q\xd2\
Y\xb4\xb69\xde\xfb\xe0\xb6`O]\xf3i?pSH\xfer>\x9f\xfe\x87\xdc\xa8\xa2\xc6S\
\xf1\xac\x15\xbc\xba\xfe\x04T\x05\xaa\x80Z\x81\xaa\x81Z\x03k\x15\xaa\x16\x9e\
\xa7\x984!\x1f\x83\x07\xe5\x82\xee\x82\xaeH\xd2\xe2\xe4\xa9\x90\xd3\xee\xff\
\xdc?\xf0{\xeb\t\xdfw\x93I\x1e\xbe(\xe0\xf3k@Dr\xad\xc5\x0ekQ "^\x14\x16\xd4\
\x11\xcahZ\x92\xc9+,\x003\xef\xd1\x02\xbe\xbe\xea:C\xa8\x88$\xc9a\xd1\xd8\
\x14\xb0\xec\xbeo\xfc?\x1b\xda\x8fu&\xdc\x9d$\x8fu\x97\xee\x0b\x1c \xd9\x0e\
\xe0\xf6\xee^\xec&U\xf9\xd6J\xc3\xe4\x8991#\x1dtNE\xc4\x92\xb48r\xd4g\xd9\
\xcc\xdd~\xd3\x89\xc4\xc1D\xc2\x95\x91l\xee\t\'\xe3\x13\x11\x80\xf9y\x03\xad\
)\x9f1\x00t\xbe@\x02\xd2\t~=\xe4\xb3\xec\x81\xdf\xfc3\x7f\x05u\x89\x04\xef\
\xee\xad%gz"\xd2X\x0c\x0b+\xe7\rRU\x11\x82\x00\x89\xbd\xfb\xe3\xbc\xab\xfcp\
\x10\x8f\xbb\xda\x84\xcf\xe9$\xcf\xf6\nF2\xed\t\xa0\\U\xfc\xe3u7\x84~C\xb1\
\xf3\x1b\x8a\xdd\xae\x8fF\x86\xfdrMgL\xf1)\x80\xec\x94\xb12\x11\x10\xf3P\xfb\
xE~\xe07\x14\xbb\xa0\xb18\xdc^3"\xcc\xce2\tU\xbc\x07\xc0K+\x98\x0c\xa2/\x01\
\x10\xfe\xf4\xd9\xa8\xd0o(v\x1fT\r\x0f=\x15\xdf\x1aT\x01\xb0i\xe3\xa5\xbb\
\xc0\x18\xbc]zK\xbf\xce\xa0\xb18\xac^{uh\r\x02\x03\xacArK_Q\x01\x00\x86\x19\
\x83\xc4\xe6\x8d\xc3\xc3u/\x17\x86"\x08\x00\xbc\x94\tq\xa6\x02\x96\x16\x0e\
\xd5\x8e\x15\xcf\x0f\r\x05\x08\x01<w9\xe4i\t\x00\x90\xa5\x8a\x96a\x056\x04\
\x10\x00\xa8\xbc\\\xf2t\x05\xccE\x14u\x00`n_\x90\xa7+`\xbf\x08\x12\x00f\xf5\
\x159\xc9\xb4:\xa1%1\x93\xe4\xd64\xd6\xf4:R\xfe1\xb9R\xe3\x1f\xdd@\xd4YV\x9b\
\xaf\xb5\x00\x00\x00\x00IEND\xaeB`\x82 \xcaIK' )

def getsimulateBitmap():
    return BitmapFromImage(getsimulateImage())

def getsimulateImage():
    stream = cStringIO.StringIO(getsimulateData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getmove_downData():
    return zlib.decompress(
'x\xda\x01\xe7\x01\x18\xfe\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\
\x10\x00\x00\x00\x10\x08\x06\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\
\x08\x08\x08\x08|\x08d\x88\x00\x00\x01\x9eIDAT8\x8d\x95\x92\xcfK\x1bA\x18\
\x86\xdfwv\'\xdbm\x88aM6K\xaaQ\xd26\xc1\xd6\xd2R\xf0R(E<\x14\x04Qz\xf4\xa6W\
\x0f\xa2\xff\x86x+\n-=\xb6\'\xb1z\xa8\xb5\xbd*\x1el\x0f\xa5=\xd9\x93\xbfH4\
\x12D\x10-H\xe2\xe7A\xd1\x98\xd9\x88\x1d\x98\xcb;\xcf\xf70\xdf|C\x11A\xfd\
\xa2v_Y\xb6\xee\x10ekK\xa8\x05\xb0I\xfe;9*O\x19l\x98\xc0\xf1\xee\xafz\x8fz\
\xbbHE*\x05\x80r\xf0\xf7[\xf1xo-S\xcf\xdaF5\x00eE\xaaN\xbc\x95$\x08\x00"\x00\
m\xb7\x12\xc6\x86\n\xa8H\x92 k2\xd2\xbc*\x00\x15\x16\x824r\x92\xa7\xb7\x17\
\x8804\xbf\xb5\x000\x05\r\x94\r\x04\xb4\x0cP\xa9\xffy\x031r\xd7\xbd\x13*\xb8\
\x9c\x82}\xd7\x9b\xd3\xae\x97\x00\xc8H\xfc\x9eW\x0b%\xbc&\xa0\xbd#\xf6\xf0\
\xe9\xcb%G\xb3R*l\x1e\x96w\xb7\x06\xae\t@\xbe\xb7\xa2\xfet\xe2\xc9@[\xed\x00\
#\x11\x8dt\x90D\xee\xc5P\x90\xcffR_?M\x16J;\xdbcF\x0b\x95\xa3\xfd\xc5\x93\
\xf2\xda\xe0\xfe\xef\x99u\x91S\x00\xe7\x93H\xfb\xcdH\xa7<\xa6\xfdf~\xf98Q\
\xfc\xb1\xbc0V.n|\xbe\xea\xb6\xee+;N\xec\xb1\x8a\xb7\xce\xfa\xcf\x07\xf3\xa9\
d\x92\xf9\x07m\xc8e[du\xf1]\xe1\xd7\xca\xf7\xd1Ra}\xfeZ\x81\x88\x18\x1b@&\
\xea\xe7\xff\xbc\x1e\xf9P\x1d\x7f\xbbR\xed\xe9\x1f\xde\x0c\x82l\x7f(\x1b\x16\
^H\x12A{\xe7\xcf\xae\xee7\xdb^\xb2\xa5\xaf!\xd7\xe8\xe0B\x12\xd3:\xfa\xec&\
\xe6\x0c\xa3F\xd6\x8b\xf7\xfc\xb3\x9a\x00\x00\x00\x00IEND\xaeB`\x82.+\xd9e' )

def getmove_downBitmap():
    return BitmapFromImage(getmove_downImage())

def getmove_downImage():
    stream = cStringIO.StringIO(getmove_downData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getnewData():
    return zlib.decompress(
'x\xda\x01\xb9\x05F\xfa\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x19\
\x00\x00\x00\x1c\x08\x06\x00\x00\x00\x94$\x14\xd0\x00\x00\x00\x04sBIT\x08\
\x08\x08\x08|\x08d\x88\x00\x00\x05pIDATH\x89\x8dVMlTe\x14=\xf7{?3\x9d\x96Ni\
\xcb\xb4\x85\x0e\x14-1\x05\xa1CA\x83\x06%\x84\xc4\xc4\x98 (\x06\x91\xc4H\xc2\
\xc2\xb8b\xe3\xc6\x84\x8d\x89"$\xc6\x8d\x1b\x12t\xa1\x0b5&\x90\x14\x15\x08j@\
\x81\x08\xa1X(\xa0\xe1\xa7\xf5\x1f\xb5I\x99\xbf\xb6\xc3\xbc\xf7\xeeq\xf1\xde\
\xb4Ci\x8bw\xf3\xcd\xf7\x93{\xee=\xe7\xde\xfbF\x80\xce\xd8\x96-\xebv\xf5\xf4\
\xac\xd8\xd0\xd8\xd8\xd0\n\x00\x80\x10\x00IRDH\x80\x02(\xc9\xe8\x8e\x141JR\
\xff\xf8\xe3\xd6\xf5\xbe\xbe\x81cG\x8e|\xfc\tf0{\xf3\xe6u\xbb\xf6\xef\xdf\
\xb7+\x9b\xcb\xc9H6+\x04!\x80\x02\x02\x00\n\x11\x8d\xbb\x8e>\xb4d\xc98 \x14\
\x115\xc6\xa8\xaa2Z\xbb/^\xbc\xda\x9d\xc9l\xb8\xd9\xdf\xff\xcd\xb9iA\xd6\xac\
\xc9lp]\xc7:q\xfaL\xcdw\xa7\x7f\xa8\x99rO\x00H\xcdk\xf2\xde\xda\xfd\xc6\x9f\
\x8cR\t\x82\xc0\x88\x88"\x8c\x84\xdd\xddKu\xed\xda5[\x00L\x0f\xd2\xd0P\xbf\
\x08\x80yde\xb7\xbf\xa0\xad\xad\x18\xf9e\x852\x084\x11\x8f\xab\xaaZ"\xa2!\
\x83\xe1\xaaJ1F\x140X\xbc8\x9d\x9a\x91.\x111$\xadE\xe9v\xa6\xdb\x17\x04\xa1\
\x03 \x8a4\xa4\'tjU"\x07P\x05\x04\x01T\x8c\x81\x99\x11\x84\x84\x01hD\x0c-\
\x81\xf8A  HP\xc4\x84\x8e("\xeay\x02\xc0 \x047BQ\x11\xaam;bY\x96\x90"\xb3d\
\x02Q\xa5%B\xfa~\xa0?^\x1ap\x87GF@e$\x01(\x02F\x19D\xaa@A\x81c\xdb\xfa\xc8\
\xaa\xcchk\xaa\xe5N\x94\xe5\xf4 \xe1\xa5Z\xaa\xc2r\xd93}?^r\xae\xdd\x1c\xb4\
\xfc \x98\xfa\x96S\xf7\xf1x\x8c\xf3[[\xfcyM\xcd\x81\xc8,\x99\x000$\x8c\x08\
\x18\x8f;\xdc\xfa\xfcF\xdf\xf3|\xafR\xae\x95\x1e\x11\xa9\x14\x82(\x08\x8a@\
\x8d\x11M\xd67\x04\x96e\x19@g\xd6D\x84B\xd2RU\x06\x81j\xa2&A\xc6\xb5\xe2T\
\xaaVT\x9fId\xaek\x0b@3\xab&\x80\x08I)\x14\xc7\xd0?p\xd9\xf6<\xafB\x8bVQ\xa4\
\x00\x00\x11J\xa8\x0b\x01\xd0u\x1d]\xb5\xb2\xbb47\x99\xf4Ef\xd7\x04$%\x9f\
\xcf\xe1\x9b\x93\xa7L\xa1X\xac\xdcE\xe9OJ\xc1\xca&:\x9aSW\xa7\x0b\xd3\x0b\
\x82\xfa\xba:\xde\x17\xc4\x18\x83\x96TJ^\xdb\xf9\n5\xf0\xa1\x00#\xde\'\x9aR\
\x04Z\xfd[\x00Z\xb6\xa3Ms\x934\xc6\x18\xf2> \x00`\xdb\x16\x1a\x1b\xea\x85\
\x93\x81G\x8dGJ\xa57D*@\x91.\x90\xbd{\xf6\xce\xd9\xb6}\xfb\x180{u\x81$\x8a\
\xc5".\xfft\re\xaf\\\x05\x00\x89"4\xa1\xe8dxD\x82\xe0\xe0\xf5A\xbc\xba\xf31\
\xb9|\xf5lbx\xf8\xdf\xe4}A\xb2\xb9<\x8e}{\x02\x85\xc2\x84&S#\xab\xec\'r\xb5\
\x82Q$_J\xebS\xeb\xdb14\xf4SW&\x93Y\xd6\xdf\xdf\x7feZ\x10c\x0cR\xa9\x14^\xd9\
\xbe\x15\x1a(\xc2J\xbd\xdb\xa2\x8a\x02\xa2\t@\x82\x97\xfb\x8f\x9aD\xcc\x13#e\
l\xdd\x94v\x9b\x93\xab\xf7\xec{s\xdb\xbfe\xcf\xf2Kez\x9e\x0f={\xee\xb7IM\\\
\xc7\xc6\xfc\x96\x16\xe8=\x8d}W&\xacd\xd4w\xfe\x82Y\xff\xf8<\x08\xf2\x00\xcb\
b\x9bQg\xebs\xe9\x14\xc4I\x1a\x89\x97`j\x8b\xa5\xb23\xfa\xec\xb6\x8f\xcfN\
\xd05:6\x8ek7\x07\xe1\x85\x9a\xcc\x08T\xc8\x17\xf0\xeb\xd0\xcfX\xd2\x11Hmm=\
\x18\x04\xa4)\xc1\xb6\x0b6\xa9I\x83X\t\xa0\x01-\xff\xc0\x87\xe7\xc7\x8f\x1f\
\xff\xe5\x83IM\xb2Y\xf4~u\x0c\xf9IM\xee2\xaf\xecC\xfc"\x96w5a\xfd\x13m\x92\
\x88+\n\xf9a\xc4]K,\x8c\xc11\xb7]Q\xabN\r\x05j\xf9\x81o\xee\x9c\xf8~\xe8\x0c\
9T\x9a\xd0d^s3^~q\x0b\xfc\xc0\x9f\x16\xe4\xea\x95!\x94\x8a\xd7\xf1\xdc\xc6\
\xe5\xb0M\x01\x96\x19\x85m\npL\x16\xc2"\x1c\x93\xb7\xa155\x02\xb7L\xa3\xf6\'\
\x9f_\xd3\x83\x87\xff>0!<\x00\xb8\xae\x83\xf6\xf9mU\xf4\xdfm\x1d\xe9\x85\xc8\
\xe5zp\xe8\xf0\x97\xd8\xf4L+\x12sb0\xbc\x03#\xe1lT\xb8j\xc4\n\xc7\x0f\x85=\
\xdd\xa9\xd8\xe2\xc5^\x17\x80\x8b\x13 \xe3\xa5\x12n\x0c\x0e\xc1\xf3\x83{\x87\
z\x95uve\xf0\xd1gg\xf1h\x86\xc8<\x1cG\xdc\x8d\xc3\x92\xb9\xf0\x14\xbemK\x91&\
V\x12q\xca\xcb\xba\x92wVg\xd2\x1b"\x90\xb0\xc7GFn\xe3\xe0\xe1#3j2\xd5\xce\
\x9c\xbb\x85wv\xaf\xc0\x82\xd6:\x18\xc7\x85\xe7\xab\x97\xa8\t\n`\xbcD\x89\
\x8d[&QZ\xfaP\xdb\x83\x00`g\xb3\xc5\xdfI\xb6756b\xdb\xf3\x9b\xe0\xfb\xf7|\
\xac\xa6\xb5\x9b7\x86\xe0\xfb#p\x9c$`<\x94\xcacc\x17\xbe\xff\'\xe7\x05E\xac\
\xee\xe9(\xcdm\x88\x95zVu4\xd7\xd6.\x9co\xf7\xf5\r\x1c\xdd\xb1\xe3\x85555qt>\
\xd0\xf1\xbf\x00\x00\xe0\x81\x8e4.\xf5\xf5\xca\x92\xcez\xe6r\xb7\xf5\xbd\xf7\
\x07\x06\x8e\x7f}\xe3\xf5\xfe+\xb7\xff\xe9\xec\xac[\xdd\xd1\xde\xb8\xa8\xb55\
\xd9\xd4\xde\xde\xdce\x7f\xfai\xef\xbb\xae\xebZ+Wv=\xdd\xdc\xdc\xb4\x10\x00f\
\x1b\xdb\x15#\xc1\xe1[\x7f\xd5\x0bF\xf3\xfb\x0f|w\xe1P\xef\x17\x9bIV\x9a\xec\
p\xf5[\x89\xfe, \xfaF\xbb\xe1q\xc7}A\x00\x9bO\xaem}\x1b\xe4\xc9\x93\xa7N\xf5\
\xce\xf6\xf2?\xb2\xb4\xc3fL-M\xde\x00\x00\x00\x00IEND\xaeB`\x82\x03\x87\xbb\
\xd1' )

def getnewBitmap():
    return BitmapFromImage(getnewImage())

def getnewImage():
    stream = cStringIO.StringIO(getnewData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getpointsData():
    return zlib.decompress(
'x\xda\x01\xae\x03Q\xfc\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00 \x00\
\x00\x00 \x08\x06\x00\x00\x00szz\xf4\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\
\x08d\x88\x00\x00\x03eIDATX\x85\xed\x96\xcdk\x1cu\x18\xc7?\xcfofvg\x97\x9a\
\xddI\x93\x80A\xad\xa9\xb4\xd8M%m\x0e\xb5\x18\xaax\xa9\x08\xdb\xd2\x83\xb1\
\xd8\x17_\xaa\x08\x1e\x04\xd1B\xf1\x92\xbf\xa07\xc5\x93\x07\x11\x0b\xe2\xa1-\
x\xb0\x14E\x14\xdb\x1e\xb6\xac\x15!"\xad-\xc1\xda\xcdK_v\xe6\xd0\xec\xee\xcc\
\xec\xe3!\xb1.k\xad\xfb\x92m.>\xf0\x83a\xe6\x99y>\xf3\xfb}\x9f\x17QUV\xd3\
\xcc\xaaFo\x04\x10\x91a\x11\x99JZ\xd6\xef\t\xdb>#"\xfbD$\xd1s\x82\xe5#\xc8Z"\
\xe5\xa1Tj\xf1\xc8\xb6m\xf1\x8b\x9b6E\x8ee\xd5\x0c|\xaa\xaa\xf4r\x89\xaa""o\
\xa7-\xeb\xe8\x85\xdd\xbb\xed\x07\xd6\xac\x11\xe3\xba|y\xf5\xaa\xbey\xeaT\\W\
}DUg{\xb5\x01\x06\xc0\x81\x03{\x86\x86\xec\xe4\xed\xdbDA@\x14\x04<70 \tc\x00\
^\xe8Up\x00\x1b \x86B\xe1\xd6\xad\xb1\xa8\\vL*\x85\xa9V\xb9\x18\x86T\xe2\xd8\
\x02\x8a\xbd\x04\xf8K\x03O\x00\xf1\xabk\xd7\xc6\xdf\x8e\x8e\xd6?\xcb\xe5\xe2\
\xf1L&tD~\xee\xb5\x06\xfe\xbe\x80\xb7\x1c\x98Y\xda\x10"\x1b\xbe\x01\xc6\x97\
\x9f\r\x02G\x12\xc6\\N\x18S\x04\x0e\x01\xa9\x15\x05X\x0ed\x80\xa7\x81\xf5\r\
\xf7\x12\x96\xc85/\x99\xac\xbc;>\x1e\x1f\xda\xb2%J9N\xd5\x169\xbdbYp/\x13\
\x91\xfd\xb6\xc8\'\xc5|\xde\x0ce\xb3\x88\xeb\xca\xb9\xeb\xd7\xd9s\xe2\x84\
\x029U\xfd\xb5\x1b\t\xb4R\t\xf7?\xebyd\xaaUB\xdf\x97(\x08\xd8\xde\xd7\xc7\
\x83\xe9t\xc8\ndH+\x00\x85\x0bA\x10W\xcbeB\xdf\'\xf2}\xfe\x98\x9f\xd7\xb9\
\xc5E\x0b\xf8\xa9[\x80V\x8e\xe0!\x81\xcb\x93\xd9\xac\xf5\xc6\xf00\x811\xf2A\
\xa9T?s\xf3\xe6|\xa4\xfa\xb0\xaa\xc6]\x11\xb4\xa4T8\xe0\xc0E\x962$v\xe0,\xb0\
\xe3\xbe\x88\xb0i7\xb6\x03\xbe\xaa\xfe\xd2\xd5_7~\xf3\xffy\xa0\xdd\x17DdPD\
\xdeOZ\xd6\x95\xa4m\x9f\x17\x91\xd7D$\xd5)@\xbb\x1ap-\x91\x99\xbeD"\xf3\xfa\
\xe6\xcd\xce\\\x18\xea\x17\xd3\xd3\xf5(\x8aNG\xaa\xf9\xfb\x01\xf0\xb2c\xcc\
\xc7\xc5|\xde\x1a\xccd\x10\xd7\x95\xef\x17\x16t\xf2\xe4I\x05\x1eW\xd5K\xed\
\x02\xb4{\x04/\xed\xec\xef\x97\xbeJ\xe5NU\xdc\x91\xcd2\xe0\xba\x11\xb0\xb7\
\xdd\xe0\x9d\x00\x9c/\xfa~\\\xf3}\xc2  \xf2}fJ%nT*6\xf0c\'\x00\xed\xb5NxT \
\xda\xeby\xf1\xd7\xb9\\\xfc\xf9\xe8h}\xc2\xf3BGd\x060M]u\x97-\xf2\x95c\xcc\
\x1cp\x14\xd8\xf8\x9f\xed\xb8E\x88W\x1c\xb8\xc4rU\xb4\xe1\x07`\xa2\xc9g\xca\
\x12\t\x9f\x1f\x19\xa9MML\xc4\x8fy^\xc5\x88T\xef\x06\xd1q!\x12\x91\xa7\x80\
\x1b\xcd\xedXD\x1c\x1b\xae\xbd\x97\xcb\xf5\xbf36\x86q]\xb1\xd2i}\xf2\xd8\xb1\
\xf0\xb7r\xf9CU=\xdc\xe8\xdfq!R\xd5\xb3\xff2\x0b<\x13A\xff\xa4\xe7\xdd\x11j\
\xe8\xfb\xb2o\xc3\x06\xc71\xe6`\xb3\xb3\xdd)\xc0=lZ\xa0^\x98\x9d5;E\xa8\x87!\
\xa6V\xa3P*\xc5\xaa\xfa\xcf\x01w%:Z\xf3\xb2\xe0\xf8H"Q\xfbh\xdd\xba\xf8\xdc\
\xd6\xad\xf5\xc3##\xb1%\x12\x02\xbb\xba\x16a\x8bB]o\xc1q\x81\x90%\xa1.\x00S4\
dJ\xd7"l\xc5Dd\x18\xc8\x01\xdf\xa9jxW\x9f\xd5n\xc7\x7f\x02\xeb\x83\xb2\xbc\
\xc3\xbd\xed\x97\x00\x00\x00\x00IEND\xaeB`\x82n\xae\xc6\xce' )

def getpointsBitmap():
    return BitmapFromImage(getpointsImage())

def getpointsImage():
    stream = cStringIO.StringIO(getpointsData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getrestart_fitData():
    return zlib.decompress(
'x\xda\x01\xba\x05E\xfa\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00 \x00\
\x00\x00 \x08\x06\x00\x00\x00szz\xf4\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\
\x08d\x88\x00\x00\x05qIDATX\x85\xdd\x97kl\x14U\x14\xc7\xff\xe7\xde;3\x8b-n\
\x05\n\xc8\xa3\x95g|\x80Q\x1e\x02\x12M\x11\x05\x84\x84D\xa3\x92\x08\x92\xe87\
\x88!\x9aH1\x01\xe3\x07\x9f`4\x1ac\xa2V\x82\x89\xc6\x88\x81\x0f@\xa2\xb1"\
\xa0\t\xaf\x10\t\xa5>@ \x14\xdbT$"\x94\xb6\xec\xce\xce\xdc\xfb\xf7\xc3\xee\
\xf6\xc5\x16\xdbE\xbfx\x93\xc9\x9d\x99\xcc\x9c\xff\xef\x9e{\xe6\x9c3B\x12\
\xc5\x0c\x11Y\x06\xa0\x95\xe4\xb6\xa2\x0c\xe4\x07\xc9\xa2\x0em\xf4NQ\x12\x02\
\x98U\xac\r\x92P\xc5\x82\x0b\xc4(\xa5\x8c6z\x9b\x88\x8c,\xd6N\xbf\x01DD\x8b\
\xc8\x14\x00\xc3\x1f~b\xbe\x8c\x9bXy\xbd\xe7{\xdbE$Q\x14A_\xdc\x04` \x805\
\xc6\xe8o\x94\x966\x00v\xf0\xd0d\xbaf\xfb+n\xcf\xf1\xcf\xec\xc0diZ)\xf5I1[ \
\xff\x14\x84"2\xcb\xf3\xf5\xe7\xc1\x00\x7f\xd8\xac\x07&{w\xcc\xbeY\xa6\xdd=\
\t\x95cG\xc17\tx\xda\xc7\xe1\xbd\xbf\xf0\xc9Ek\x9cs\xeey\x92o\xf6\xcb\xa3\
\xbd\x01\x88\x88\x06\xb0ND\xd6M\x9d3\x01+_{H\r\x1et\x83x&\x10O\x07\xf0M\x90\
\x050><\x9d\xe0\xe6\x0f\xbf\xe4k\xd5\xef;\x92\x8bH\xd6^\x13\x80\x88\x88h|\
\xad\x95\xaaZ\xf2\xdcl}\xff\x92)\x92]m"7\x07\xf0L\x16\xa2\xe3\\\x07|q\xe5\
\xbbn\xc7\xe6]\xed\xce\xbaI$\x1b\xfb\x02\xd0[\x10\xae\x10\xc8\x9cU\x1f\xcc\
\xd33\x16\x8f\x950J\xe7\x8e\x14\xc2\xe82\xc28\x85L\x94B\x18\xa5\x10\xc6\xf9{\
\x97q\xeb\x94qB\xc7\x12\x00e}\xf5\x80)\xb0\xfa\n\xa5\xe5\x8d9\xcb\xc7\xab!c\
\x02\t\xe3\xb4\x90\xd9`ut \x1d\x1c\x99\x9b\x1d\x1c-\x9c\xb3<\xb8\xeb(\xd7W\
\xd78\x92\xabI\xd6\x17\x0f\xa0\xb1\xf1\x86\x91\t3\xed\xe1\x1b%\x8c:\xc5\x89N\
AK\x07\xe7,\xac\xb1p\xb4<\xf5s\x13\xd7>\xf5n\x0c\xe0\x03\x92o\xf7U\xfc\n\x00\
\x11\xa9\x02p\xdf\xdcU\xa3$b\x1a\x12\x03D~\xe5Y1\xc7\x18?\xee?\x83\x13\x87\
\xfe\xc0\xc2\xe5wA\x8b\xcf\xb5\xcbk\xa28v;\x9ds\xcf\xf6G\xbc\x90\x07\xee*\
\x19b2\xc9\n\x04\x99(-\xe8\xf8^\x1d\x00\xcb0\x9d\xc1\xd6\xd7\x8f\xd8\xba\xdd\
\x8d"\x02\xc6q\xac\x7f>\xd0\x14\xb5\xb7\xa4\x8e\xd9\xd8-!i\xaf\t@)L\x1b4V\
\x9bL\x9c\x06\x88\xeenw1vol`\xfd\xf7Mm\x00\x16\x89\x91M\xbb6\x1f\x1dO\xf2\
\xbc\xb3|\x90d{\x7f\xc5\xaf\x00\xa0`z\xb2\x12*\x8cR\xa0\xeb\x1ah\x0e\xad\x17\
\xd28\xb0\xb5\x01$\x9e!\xb9O\x1b\xa5\x1cy\x99\x8e\x0bH\xfe^\x8cx7\x00\x11)\
\x050\xbat\xa4\x95L\x94\x12v\x8dtgq\xf6D\x84\\\xc6\xd8\x02\x00\xcer\x03\x80_\
\xbbF|\xae(\r\x01 \x05\xb4\x08\xa0\x91\xe4_\xbdy \xfb\x92\x10\x91\x8d@t\x07\
\x88b\x8b\x1c\x81\x00\x00\xc9\x9a\xae\x86Dd\x02\x04\xf5 \xbc\xde\x00<\xdf\
\x1c\x060\xbd \x00\xc9Ve\xa4\xf1R#+\xcao!\xac\x8b\xa5\xeb\xb7^:\xda\xcb?\xba\
\x10\xc0\x17\x05\x04\x1e+-K\xa0z\xd3b\xf1t \x9e\xf6at\x00O\xfb\xf0\xb4\xcfO\
\xdf\xaa\xc5\xde\xaf\xea\xdbz\xbe\xd4-\x13\nq\xf0b\x03\\\xfe\xda\xd1!\x13\
\xa7\x90\x89\xd3\x90\x01!&\xce\x1d@\xa5\xe5=\x11\x99\xdac\xf5\xf3D\xc9\x0b\
\xf7<6\xde+-7(-\xf70\xb0\xdc\xc7\xf5C}$\x87\x05(\x1b\x1e\xe0d}S\xc6\xc6\xf6\
\xbb\x9e\x00\xdd\x82\xd09\x1c\xbap\x9a\x8bI\xea\x9ca\x00@dC8:Lz4\x90\x96f\
\x9b<w,\xb3_\x94\xd4\x828\x06\xc1\x9d\x00\xaan\xbbw(g>R\xd1\x91\xbc@vlc\xeb\
\x85647\xfc\xe9\x03\xd8wU\x00\x00\x87R\xe7\x19\xb4\x9f#J\x87\t\xc9\x0e\x06X\
\x17\x892\x0e\xf7\xacN\x98\xe6C\t\x9e\xfb\xc9.h=k\xe7\x0e\xae\xbc\xce\x9f0c\
\x90L\x9cY.\x19\x9b\x06r\xa2\xcc\xa7i\xc6<\xb2\xf77B@\x10\xfb{\x02t\xab\x86"\
\xa2\xa0\xb1\xb7\xacR\xa6\xcc\xae\xd6\x9e\x12\x91\x0e\x82\xfc3\x10\x18\xe3\
\xd3\xd3\x89l54\x01|\x15Hgy\xceW\xc7\x04|\xcfg\xa6]\xb8~\xe9\x8e\xe8\xd2\x85\
\xd4\x16Z.\xbb\xaa\x07H:\x11y\xa2\xa5\x81GO\xd5:3~\xbe\x06\xc8n\x10\x04\x11\
\xc5\xa1 \xeff\x12\xd09w\xe7\xd2vg\xd1\x8a\xb1eC\x1d\xdb[\xc2\xf3px\xba\xa78\
P\xa0\x1c\x93<I\x87\xd5\xc7\xb79\xdb\xda\x9c\xad{\x85z\x86\xc8\x86\xb9R\x9c\
\xea\x9c\xbb\x9c\xa7\xa3\xcb\xfc\xa1\xf64\xebv5\xc1\xc6n\x19\xc9\x8b\x85\x00\
zmH\xa0\xf1\xad\xf11\xfb\xf6\xa5\xca\x1b1]e\x83\x81W\xec\x08\x94\xe8\x8e\xa6\
\xc4\xd3><\x13\xd0\xd3>N\xecn\xe3\x9e\x9a\xa68\xce\xb8wHV\x17\x12\xef\x15 \
\x07Q\x02\xe0u\x00+FLS\x9c\xfc\xb8R^\x89\x88tI2\x1d4\x14x\xda\x871>\xe3\x16\
\xc3\x03\x1f]\x8a\x9b\x7fL\t\x89\x97\x01\xbcJ2\xee7@\x17\x91*\xa5\xf1\xb1\
\x19\x80\xe17U)/Y!\x92\xac\x14$\xca\xb2\x00$\x91:\x0f\xb4\x9c\x01.5\nO\xed\
\x8cc\xe7x\x8c1\x96\x93\xac\xbb\xaaq\xa0\xcfmy\t\x80\x97\xc4\xa0N\x04!\x00\
\xeb\x95 \x9d\xacD\xca$\xb2\xd7"\x08\xc5\xa0\x0e\xc0\x1a\x00\xe6_k\xcb\x0bx\
\xc4\x030\x19\xc0T\x00c\x00\xfc\n\xe0\x08\x80\x9fHF\xfd2\x86>l\xc1\x7f=\x8a\
\xfe7\xfc\xdf\x00\xfc\r\n\xd6\xeao\xd0z\x15[\x00\x00\x00\x00IEND\xaeB`\x82E\
\xe5\x98k' )

def getrestart_fitBitmap():
    return BitmapFromImage(getrestart_fitImage())

def getrestart_fitImage():
    stream = cStringIO.StringIO(getrestart_fitData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getzoomData():
    return zlib.decompress(
'x\xda\x01\xda\x04%\xfb\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x1a\
\x00\x00\x00\x1c\x08\x06\x00\x00\x00\x7f\x13\xaf\xd3\x00\x00\x00\x04sBIT\x08\
\x08\x08\x08|\x08d\x88\x00\x00\x04\x91IDATH\x89\xad\xd5{lSu\x14\x07\xf0\xef\
\xb9\xbdm\xe9sk\xb7nl,\xdbxHW\x9c\xe3\xe1x)\x10 \xa0H\xd08\x84\x18\x13\xfe\
\x10\x12\xe2\x08\x91\x90\xe8\x1f&\x04\r\xd1?LL\x8c\x7f`\x82\t\x8aQ\xff\x00\
\x13\xf1?\x88!L$\x98\xb1\x07\x88\xc1E7\x91\x8d\x01\x056\xd6\xde\xf6\xb6\xbd\
\xb7\xf7u\xfc\x83.\x96\xad-\x9bp\x92\x93\x93\xfc\xf2\xbb\xe7s\xcf}\x123cb\
\x10Q\x00\xc0\x16\xbb\xdd\xbe2P\x11\\\xe3\xf3z\xc2\x9a\xa6\xc7$I\xea\x92\x93\
\xf2y\x00?3\xf3\xa5I\x07\x96\x08\x9a\x08\x11\xd1+\xf5\x8d\xf5\xdf47?]\xe6\
\xf1\xb8\x01\x006Q\x84i\x18\x00\x00\xd34qch\x18}\x7f\xf4}\xad\xaa\xd9}\xcc,O\
\x0b""\x9f\xdb\xed\xfar\xd1\xe2E\xdbg\xd5\xd5b\xe1\x92\x15\x884/Fum=\xfc\xe5\
\x95He2\xb8}\xeb\x06\xa2\xc3\x83\xe8\xbe\xf0\x13R\xc9\x04z\xba{G\xa3\xb7\xa3\
\xdb\x99\xf9\x97)Cn\xb7\xfb\x87\x176m\xdc\x1a\x08V\xa0\xed\xf5]\x98=\xbf\x19\
\x86\xc9\xd0MkRM\xa7R\xe8<s\x02\xc3\x03W\xd0\xdb}I\x1b\x1c\x1c\x8a0\xf3\xf5R\
\x90\x98\x9bf\xdb\xca\xe7Wl\rTTb\xf7\xfeC\x10\x1d.\xc8\x8aQ\x101L\x86\x0e\
\x07Z\xd6\xef\x80\xe8\x0e\xc2\xb2\xd8q?\x16;AD\xcb\x99\xd9*\x06\tDT\xd9\xd0\
\xd0p\xac\xaen\x16^l{\x13:\x1c\x90\x15\x03IE/\\3:\xe4\x8c\x8edFGud-<\x81\x1a\
,[\xd6\xda*\x08\xb4\xefQ\x13\xbd\xbc\xa09\xe2\r\xb7\xac@y\xcd\xbc\xc2\x93\
\x18\x16\x0c\xd3\x82n\xf2\xa4:s\xc9\xabP\x12wQU]\xfd6\x80\xcf\x8aB\xa2(.\xf3\
z=\x08\xd5G&#F\xe1\xe6\xf9\xd5rV\x82\xec.\xf8\xcb\xfc\x8dD\xe4bf\xa5 \x14\
\x0c\x06V\x03\x80\xa3\xac\x06IE\x7f\xe4\x04\x86i\xc1\x9a\xf0\xea9\xcb\xeb\
\x10\x08\x0c\x08\x00Z\x00t\x15\x84\xbc>\xef<\xc1&\xc2\x10}P3\xfa\x94\x9b\xe7\
\x87\xc3W\x85@\xb0\x02\x00\x16\x14\x85\x14E\x8dZ\xa61;\x1e\x97\xc0\xa2{\xca\
\xcd\xf3C\xcf\xc4 \'\x93\x000Tl\x8f\x10\x1b\x8b\xfd\n\x00\xf7\xef\xdd\x84\
\xac\xe8HgMh\xc6\xd4\x11\x00\xc8\xc6o"66\xc6\x00.\x17\x85\xb2\xd9\xec\xc5\
\x8c\x92Ez\xf4\xc6\xb4\x9a\x8f\x87\xa9&`eS\x90\x93\xa9{\xcc\x9c(\n\x018}\xfd\
\xda539x\x11zzl\xdaP\xac\xef4\x145\x8b\x91\x91\x91\xe3\xa5\xf6\t\xcc|\xbd\
\xff\xaf\x81\x03R<\x8e\xb1+?\x02\xc5_\xeeI\x91\xbeu\x05\xea\xe85\xf4t\xf5\
\xc44M;P\x12\x02\x00\xcb\xb2>\xe9\xed\xe9\xfd-\x9b\xbc\x83{\xdd\xdf\xc2\xc8\
\xc4K\x0b\xcc\x90\x07;\x11\xeb;\x85x\\\x02,\xd3\xe3w\xd9?\'"o\xb1C\xf2\xbf\
\xde\x8d\xa1\xaaPG\xeb\xd2\xd6\xd9^\xbf\x0f\xe5\xe1\rpU\xcd\x87\xe8*\xfb\xaf\
\xbf\xa9CKD\x11\xef?\x0bM\x8a"\xab\xaaX\\\xeb\xc4\xaeg\x9c \x87\x87\xb7|x\
\xb2\xf3\xeaplu\xa1o\xdeC\xff#"r\x88v\xf1\x83H\xa4\xe9\xbdpSX \x02Ht\xc2\xe1\
\xab\x86\xa1\xca0\x15\t\x00#\x91\x90!\n@[\x83\x82\xcd\x8d\x02\\\xfe \x9c\xbe\
 \x86$\xd3\xdax\xf0\xfb\xa3\xb7c\xe9\xb7JBy\xe0BQ\x14\xdb\x03\xc1\xc0\xaa\
\xb22\x7f\xd8\xef\xf7\xdbUUE2)\x8fHq\xa9KUUm\xdfJ\xefk\xedK\xfdp\xfa\x82\x0f\
\xe5\xb9\x81\x98\xd5\xf6\xd1\xc9\xbd\xaan\x1e\xc9\xef)\x16\xbe\x05\xfc;\x80=\
9\xd4\x06`\x1e\x80\x11f\x8e\xe7\xd6\xec}7\xa5\x84\xb6\x80]$\xd8\x90\x9f\xeb\
\x9aB\xc2\xc7;\xd7\x1f&\xa2\x01f\xee(\tM@M\x00\xfd\x13\xd6t"\xda\x14\xe9It\
\xec^n\xb3M\xc4\xf6ll\xb2\xf5\xdf\x1a;ED-\xcc<0%\xa8\xc4\t\x9c\x17m\xd4>\xa7\
\\:\xb2!2\x19\xfbt\xe7*\xe7\xf0\xa8t\x81\x88\xc2\xcc\x1c\x17\xfe/\x04\x00\
\x86\xc9G\x0fuZ_\xf4G%KK\'\x90\x9f\x96"\xe3\xbb\xfd/\x85Z\xe7\x86:\x88\xc8^\
\xf0a\x98N\x10\x91\xf0T\x00\xe7\xbf\xda<\xe3\xb9Pe\x05\x8d?\x143r\xf5N\x9ax\
\xc3\xc1\xe3\xc7\x1ek"\x00`f\xeb\xef86\xbfsV\x8df\xe4\x07\xd3\xe8\xe9\x04\
\xb4\xcc\x83\xac\xf5\x0b\xb4\xb6\xa5\xe1\x8d\xc7\x86rX\xb2\xfb.V\xbf\x7f.\
\xa5h\xe3H\xee\x12\x9e\xee\xfa\xd3<s\xf9\x9f\xc3`\xe6\'\x96\x00\xd6\xec]\x04\
\xbdoO\x90\xfb\xdf\x9d\xcb\xed\xabff\x01\xec`f<Q(\x87m\xdb2\x87R\xcf\xd6\x88\
W\x01\x84\xc7\xd7\xff\x05\xdb\x82V)a4\xa5\xf8\x00\x00\x00\x00IEND\xaeB`\x828\
\nH\xf8' )

def getzoomBitmap():
    return BitmapFromImage(getzoomImage())

def getzoomImage():
    stream = cStringIO.StringIO(getzoomData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getlinesData():
    return zlib.decompress(
'x\xda\x01{\x04\x84\xfb\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00 \x00\
\x00\x00 \x08\x06\x00\x00\x00szz\xf4\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\
\x08d\x88\x00\x00\x042IDATX\x85\xbd\xd6}h\xd5U\x1c\xc7\xf1\xf7\xe7w\x1f]\xdb\
\xbcMW\xb6\xddlK3\xa2\x82\xa2\x05EBN\x900\xc8\x08J\xd0\n\x8aJ#h\x11DDQ\xdb\
\xc8\xbf\xec\t\xec\x8f\x1e\x08"H\x02\xe9\xaf\xfe\xb00k&\x11\x05\x8b\n\x13\
\x02\xc5\x95\x1b\xa2\x9b\x0f5\xf7t\xef\xfd\xdd\xf3\xe9\x8f\xdb\xd5\xad\'\xb3\
\xed\xee\xfc\xf7;\xbf\xc39/\xbe\xdfs\xbe\xe7\x08P\xfe\xe6W\xb3c\x99\xd1L\n\
\xe2\x91\xd3G\n\xee\x7f\xab\xc4<55\xad\xed\xc9\xd7;\xd3%t\'f_9x\xfb\xd0\xb1\
\x13\xbb\xfc\xc3K\xe3\xf3\x01\x88\xea\x9d\xbdO\xd2#\x86e\xc8w$"\xdeh[\xb2hS\
\xd3\x9ag\x16\xce\x0b\x00\xfb:\xec:\xb0\x0cI\x8bfG<\xdf\x90\xb8\xf0\xd9\xd6\
\xce\xde\xc5\x92TS\x80\x15\xbe\x01&\xab\x1dB\x02\x16F\xf2\xa3\xc9l\xe6\xe5\
\xd6U=\xad\x125CD\xc5P\xda\x0e\xfaT0q\xb6[2\xd4\x0b\xeeIf\xb3o\xb6tnY!\xadO\
\xd4\x02 @m7n\xbd84\x95\xbb%6\x18\x1a\xfe\x88\x02`\x03E\xc3w.\xf1\xc4\xe0\
\xafM\xdf\xbb\x7f\xd3\x9c\x9e\x10\xd9F\x92\x96\xae|&\xc7\x05\xb9\xc7\x11]@N\
\x10\x01\x18[\xa8l|\xc0\x8a\x9f\x1cd\xf8\x0b\xef\xdcV\x98S@\xb55\xaf\xdc\xda\
P\xd7\x186\x00/`-\x11D\xe6\xcc\x80 \x18\xb2\xd4ux\xf8\xd0\'sU+\xa2\xe9\x1f#_\
>}\xfa\xf0p\xe1\xfd\x10\x97\x1f\x07\x06\x8c\xcb\xd3\xc7\x1a\xf22=\x8b\xeb.[<\
\x17\x8b\xff\x05\x00\xe0\xfe\xee\x89\xa1\x81c;\x1d\xe2\x87\x10\xfb\x04\xf1\
\xcc\xf1^^\xb7 y\x8b:6\xa7j\x02\x00\xf0\x81m\x85\xc1\xe2\xee\xafB1<`\xd3O%\
\xfc\xd5\x96\x96\xca\xab\xa1\xa5v\x00\x00\xf7\xf5\xc5CGK?\x81\xdf\x94\x984 \
\x81Q\x8aH\xb76\xa6\x1b\xb35\x05\x00\xf8\xc7\xeeb\xa9\x14\xf6\x02c\x95\x0e\t\
,PKS\xfd\xd4\xb5Z?\xfb\xda\xf0\xaf\x00\x808\xc4\'l\xfa\x051\xb2+\xa9p:H\xab\
\x18\xb9z\xd6i8\'`d\xe8D\t\xf9sP\xc9g\xf2\xa0\x94":\x9b&I\xd7\x1c\xc0\xc1E\
\xa5r\xec=@\xa5\xf8\x18\x19\'\x80k\xd2\xf5\xe9\xfcl/\xabs\x02\xec\xee0\xe1\
\xd1\x01\xec\x03@@T\x0bS6\x93\xd2*\xae\xee\x99U\x1a\xce\x1d\x01\xe0\xd4x\xb1\
h\xbbO\xa2T)\xdd\x00\xa4l\xaf\xcb\xe7Y\xda\xde\xd9\x9b\xfd\xbf\x91\x98Q\x8a\
\xffqPgo\xb2=\x95X\x1d\x12\xc9\x1d\x86\x863\xfd\xa8\x04\x1e\x0c\x0e\x1f\x94\
\x8ba;\xa3\xe5\xc1#\xdf2ew\x879\x05\x00\xb4v\xbe\xb28\xbd \xde\x1b\xcc\x8a\
\xcaQ\xac\xbc\x1d\x0cA\xb8 q\xbcl}h\x12\xef\x15\xa6\xc6\x0f\x8d\xec\xd9?i\
\xef(\x9fk\xde\xff\x0c\xd0\xed]\x996\xe77\x1bw\x1b\xe7\xaa\x80\xea\xff?n\xcd\
\x02\xf2o6\x1f\x95U~\xb70:\xba\xffxK\xc7\x84w\xdc\xf3\x8f\x90\xff\x0c\x00XtS\
o\xe3\x05\xb9\xccS\x91x\x18\x943\xceLGTg\xc4\x14%N\xdb\xdeM\xd0;\xa7\x13\x85\
\xfe\x93\x1f3\xf6w\xa99/\x00@kGo\x1d\x17f\xaeL&\xf5\xa0\xe4\xbb0\x8b\x8c\xd2\
\xfa\xfb\r]\x04\xc6\xc0\xbbH\xc4/\xfert\xf0\xe0\x9f\xaf\xf1\xf3\x06\x00H\xbd\
Q\xcb\rdC.\xdd\x96LE\xf7\'\xc4z\xdbK@\x19\t\xe1\xe9oH\x1bT4\x1cp)\xbc0U.\xee\
\x1e\xee\xeb\x1e\x9b\x15`&\xe4H6^x\xe9%\x0bR\xe9\x8d(l4\xe4\x81\xacDT\xb9;\
\x00a\xdbA\xe6Tpx;Y\x1e\x7f}\xe0\xb3\xf4\x88\xdd\x1df\x058\x0b\x91\xdaV\xf5d\
FC\xb2\xb9\xb1.}\xb7\x89\x1f@j\xb7U7="\xc6\xc6\x9e\x90\xb5W\x0e\xcf\xfd|\xf2\
\x97\xfds\x02\x98\x0ea\xed\xb6\xf4E\'C.\x93\x9b\xbc+B]\x88\xcb\xc1)f<tU\xc2\
\x1e\x88\t\x8f\xcd)`\x06\xe6\x8a\xae\xcc\xd2e\xcd\xcb\x15\xa5z1k*\xcf|\x9d\
\x89\x84P\xd9\x0e_\xd7\x0c\x00\x95=\x92\xbf\xad1\x97TqS\xc0]@\xb3DT]Rp\xb8\
\xa6\x80jk]\xf7v]">\xb9R\xd6\x16\xf0U\x824P\xb2\xe8\x9b\x17\x00\x80:6\xa7\
\x964\xb4\xb7f\x16D\xf7\x82\xaf7\x0c%\n\xf1k\xbf\x03\x07\xdc\x0cz=\xef1\x08\
\x00\x00\x00\x00IEND\xaeB`\x82\xda\xf5\x12\xcf' )

def getlinesBitmap():
    return BitmapFromImage(getlinesImage())

def getlinesImage():
    stream = cStringIO.StringIO(getlinesData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getaddData():
    return zlib.decompress(
'x\xda\x01>\x02\xc1\xfd\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\
\x00\x00\x00\x10\x08\x06\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\
\x08\x08\x08|\x08d\x88\x00\x00\x01\xf5IDAT8\x8d\x85\x92Ok\x13A\x18\xc6\x9f\
\xc9\xce\xec\xcc\xa6!\xb4\x91\x04\xa5\x01QT\xac\x87\xd0b\xad_@\xf4\xd0\x9b\
\x17\xc1\x8b\'\x0f\x9eD?\x81\xe0I\xef~\x02o\x82R\x05\xf1\xee\xc5\xa2\xe2\xc9\
\x7f\x14\x91\x82\x82\xa5i4\x964\x9b\xcc\xce\xce\xe3!\xbbi\x92\x06;\xb0\xec\
\xf2\xbc\xcf\xfb\x9by\x9f\x1dA\x12\x93\xebD\xa3\xfa\xa4~\xfa\xc8y\xa5d\x10\
\x14\x028\xe7\xed\xd6f\xfb\xe5\x97\xb7?\xeeLz\xe5\xa4 \x84h\\\xbf\xb7ri\xf5\
\xe6\xd2\x9c\xd1\x11\xb460a\x84Gw_]\x15B\xdc\'\xf9\xfb\xbf\x00\x00\x95\x99JP\
\x8a\xfb]\x90\x84\xa7\x07I\xcc\xd6\x8a\x06@\x19\xc0\xa1\x00\xd8\xc4"\xee\r\
\x00\xcc\x00\x89K\xa6Y\x07\x00!D\r@1\xd3\x8e\xda\xa4?\x06\xf0$\xdc\x00P\x17B\
\xe4\xbdm\x92mY9\x19<[X-\xae\x14\xcbJI\xa9 \x03\x89\xea\x99P\xe6#\xe4\xcf\
\xe2\xe5\xf99\xe2\xe2S\x19\x0c<\x7f\xb7\xe3\xde\xd9\xe5\xfa\x9a8u%\xf8\xd9\
\xb8f\xe6Mh\xa0u\x04\x93\x85ft\x04\x1d\x1a\x98L\xd3aV\xd3\xd1\xc0\x17\x1a<\
\xb8\xf1\xe2\x9bT\x11\x94s\tb\xef\xf7g\xf6\x1c\x0b0\x1f#\xcf\xc3\x93\xa0\xf7\
(H\xaaa\x88\xa9O\x11\xf7\xba\x99\x91c\x01\xee\xbf\xc7k.M!]\x1fi\x0e\xf1\xf4\
\xe8\xf5\xbac\x8d\x07v\x1e~{$6q\xb2\xf9\xd9\x7f\x9d\xa9\x89\x92*\xc2\xe4\xa0\
\xeaB\xacX\x1e\x05\x10\x9d\x96es\xa3\xe5\x94R\x08U\x88\xbd\x9dt\xf7\xd7\xf7?\
o\x04I\x08!\x96\x01\x94\xb2\xfe\xc5\x0b\xb7\xe4\xc3cK\x05\x15*=\x0c\xf0\xd3\
\xf3\xee\xf6\xfa\xe3\x9d\xdb\x00\xb62\xdf\x0e\xc9\x8f\x12\x00H\xbe\xcfw\x1f\
\xf9\xcf\xb0I\x7fx\x8a\xec"\xad\x93\xdc<\xf4&\x8e\xae\xc4%\x19`z\xbd0E\xdb\
\xb5\x1d\xc4\xa3B\x9a:t\xdb\xd6\x02\xd8\x9b4\x1f8\x01\xc9\x0f\xb3\xc7\x0b\
\xef\xe2\x16\xcf\x05\x1a\x01\x00\xd8\x0elk\xc3\xbf&\xd9\x9c\xf4\xff\x03\xdaf\
R\xbb3kY\x12\x00\x00\x00\x00IEND\xaeB`\x82-\xb5\x07d' )

def getaddBitmap():
    return BitmapFromImage(getaddImage())

def getaddImage():
    stream = cStringIO.StringIO(getaddData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getcalc_error_barData():
    return zlib.decompress(
'x\xda\x01\x97\x06h\xf9\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00 \x00\
\x00\x00 \x08\x06\x00\x00\x00szz\xf4\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\
\x08d\x88\x00\x00\x06NIDATX\x85\xb5\x97mpTW\x19\xc7\x7f\xe7\xee\xdd7\xd8\xec\
&\x04\x1c(\x84 \t/\xb5\x1d\x83\x04Z\xa0D[\xfa\xa6\xb4\x1d\x87@\xca\x8b-E\xa9\
S\x14j\x11\xb4~\xa8:~\xd3oE\xa1\xa5\x88\xb6\xd5\x81a\xd0!\xce\xa0\xcd\xe0\
\xb4\xb4\xce\x00\x92P\x02\ro\x83\xd0\xa1\x0bML0K\xb2\xd9\xd7\xbbw\xf7\x9e\
\xc7\x0fI#\x9b\xdd\xb4I3\xfeg\xce\x9c\xbd\xcf\xec\xff\x9c\xff\xf9?\xcf9\xf7\
\\%"\x8c\x05J)\x170\xe9sP{E$c~\xf2T__\x7f\xa7m\xdbO9\x8e\xe3\x1b\xcd(S\x02\
\x81\x95\xbet\xfa\x0b.\x10\x00\xd1\xda\x12\x91\xdcg\xf1"\xd0\xab\x94\xaa5\
\x01\xd6\xad[\xb7\xb8\xac\xac\xec\x1f\x0b\x16\xd6\x1a~\xbf\xcf\xfc,\xf2\xedH\
E\xba\xb9~\xf92\x862\x10\x11r\xb9\xdc\xb8\xacm\xc7\xd0\xda~\x10&\xbe\x07Q\
\x07\x8a\t\xca\x00\xda\x04p\x1c\xe7\xb9\xa5uK\xcc\x87\x1fy\xc8H&S\x9c>}\x86[\
=\xbd#\x12\xb0r\xc3\x06\xc6\xf9}\xd4\xce\x9fG0\x14\xa4\xa5\xe5}9x\xe0O\xcdG\
\x0e\x1f~\xaf\x1b~\x99\x86\xe6\x1eXQ\x84j\x8bH\xbf\x00\x11\x1d,\t\x06\r-\xc2\
\xafw\xecB|\x93\x11w`\xe46\xe4\xa2\xb44\xef\xe5\xa5\x9f\xbeHy\xf9\x04e\x9af\
\x80\x81U+\xd0"b\rG\xcd\xb3\xbb\xbd\xbd\x1d\x077\xe3\xa6\xcc\x1b\xf9\xe4\x03\
\xb0\xb2\t\xae^\xf9p\xd4<\xe3\xf6\x87\\6\x87\xcb\x1cU\r\x0eB\x99^\xec\xac=6\
\x01J)D\x9c\xcf%\x00\xd1(\xd4\xa8iy)\x98:\xf5\x0e\xecT\x14\xd5\xd7\x81\xcb[2\
\xe2A\xb4\x9d\xc4\x8auQU]E8\x1c&\x97\xcb\x19\x1af\xb4\x03\x19\x98\xa8\x94*\
\x13\x91\xa2U\x9d\'\xc0\xe3\xf1\xf0\xf4\xfa\xb5\x1c}\xf7\x18\xd1\xc8\x95\x11\
\x0b\x08\x05\xc6\xf3\xcd5\xab\x08\x87\xc3l\xdf\xb2\x95\xab\xd7\xae\xdd[Y^>o\
\xd6\xd4\xa9\xb8z{\xe7_\xb9y\xb3\xb3\xc4\xef\xefNX\xd6&\x11ykX\x01\x00\xd5\
\xd5UTWW\x8dxr\x00\xad5;w\xec\xe4\xf5={\xd9~\xd7]\xd4\xaf_\xaf\xc6\x97\x95\
\xf9|\xc1 \xbeP\xc8\xf4\x96\x94\x98\xc7\xae]\x9b\xf6\xad]\xbb\x0e\x06|\xbe\
\xbf$3\x99\xef\x89H\xa2\xa8\x00Gk\xc2\x1f\x851M\x93\xe9\x95\x15\x83y\xed\xe8\
\xf87\xe9t\x9a\xca\xcaJ\xdc\xee~ZOO/\xdd\xdd\x11\x8e45\xd1\xf4\xc6\x9b\xec\
\x9d5\x8b\x8aP\x88l,\x86\xa5\x14h\x8d\x88 ZS7s&W_~y\xfc3\xbbw\xaf|\xfb\xfcy?\
\xb0\xaa\xa8\x80\xbd{~O"\x99B;\x0eUU_d\xe5\xaa\x15\xbc\xf3\xf6\xbb\xb4\xb6\
\x9e\xc5\xe52q\xb9\x0c~\xb8\xedy\xae_\xff\x98\xfd\xfb\x0e\x90H$h<p\x80\x1dee\
\x04R)\xd2\xd1h\xff\xa4\xb75\x06\x9a/\x14b\xdf\xe6\xcd\xfe9\xdb\xb6=\xaa\x94\
\xaa\x17\x91Fc\xa8\x80t*\r\xca@\x19\x06\xf1x\x1c\xa0\xbfW\n\x0c\x03\xdb\xce\
\xa0EH%\x93(Cq\xe2\xe8Q\x9e\xcc\xe5\x08\xc6\xe3X}}X\xd1(\xe9Oi.\xdb\xe6\xe0\
\x0b/\x04\xfc\x1e\xcf\xef\x8a:\xf0\xed\x8d\xcf\xf0\xc1\xd96\xdcn\x93\xaf\xd4\
\xf6\x1fH\xcb\x1f\xff\x06S\xce|@2\x99\xa2\xa6\xe6n\x0c\xa5\x98s\xe7\x1c\x1ew\
\x1c\xde\xd8\xf3[\x96\x88\x90M\xa7\x07\xed\x16\x11\xd0\xba\x7f\xe5\x03\xbd\
\xdc\x96\x8e\xf9\x93\'\x13\xf0\xf9\xdcJ\xa9\xea\x02\x01\xa5\xa5!\xee\x7f\xe0\
\xaby1\xaf\xc7\xc3\xa2E\xf7\xe4\xc5\x0c\xa5\xf0\xfb}L\xf0z\xf1g\xb3\x00\xe4,\
\x8b\xf4\x10\xfb\x8b\xa5BD\xa8\x996M\xbfs\xe9\xd2\x82\x02\x01\xc7\x8f\xfd\
\x93\xe3\xc7N\x00\xb0\xb4\xee>\x96\xd6-\xe1\xe6\xcd\xff\xf0\xc7?\xec\'\x97\
\xcb2i\xd2D\x9e\xfd\xeew\xc89\x0e;\x7f\xf3\n\x13\xec\xfc\xd3\xcf\xc9d\xb0\
\xa2\xd1\x82U\x0f\xed\xe7\x94\x97\x8f?\xaa\xd4\xdc\x02\x01-\xcd\xa7\x18\x1f*\
\x1d\xfc\xbd\xb4n\t\x17/\\B\xa3\x08\x96\x95\xd3\x1d\xe9!\xda\xd7G<\x16\xc7\
\xef\x1fG\x97*<\xfd\x9cl\xb6\xbf\x18oK\xc3P\x01\x17\xda\xdb\x93"r\xb9\xa0\
\x08\x1f{b9\x92\xb5\x91\xac\xcdcO,\x07`\xc1\xc2Z&\x96\x97b%\xe2\xd4|\xf9nJC!\
\xa6ULe\xc1\xc2Z\xe2\x8eC\xba@\x02\xe8\\.\xaf\xf8\xacht\xb0H\xad\xbe>\xcewu\
\x19\xc0\xe9\x02\x07\xe6\xce\x9d\xcd\xdc\xb9\xb3\xf3b\xc1`\t\x1b7n\xc8\x8b)\
\x14\xabV\xad\xe0\xd0\xbe\xfd\x9cl=\xc32\xad\x0bD\x88\xd6\x85\xdbRk\xdazzH\
\xd9vVD>,p\x00 \x12\xb9E$r+/\x16\x8b\xc7\xe9\xea\xeaB\xeb\xff\xdd!3\x99\x0c[\
~\xbc\x8dF\xaf\x97\xeeb\x03\x01\x88\xf4\xafz\xa0E{z\xf8Ikk\xc2r\x9cg\xa1\xc8\
6\xfc\xf3\xc1C|\x14\xbe\x0e@ee\x05\xab\xd74\xd0\xd6v\x8e\xa6\xbf\x1d\xc1\xf4\
xp\x19\x8a\xad\xdb~@<\x16\xe3\x95\x9d\xaf\xe1\xf1\xfa\xf8RM\r\xbb\xcf\x9d\
\xe3\xf9T\x8a\xb2atX\xb1\x18i\xady5\x12I\'r\xb9\xbf\x8bH#\x0cy\x1d\x03tvv\
\xe2r\xbbq\xb9\xddtvu\x01\xd0\xd1\xd1\x89r\x99\x98n7\x96e\x91\xb5mz{\xa3(\
\xc3\xc0\xe5vSS[\xcb\xd2\xd5\r\xfc\xdc\xef\xe7\xb8R\x14&\x03.\x01[\x12\x89\
\xe4Y\xcb:\x94\xd6z\xc3\'\xf1\x02\x07\xd6=\xbd\x96\x93\'N"\x02K\xee[\x04\xc0\
\xb2e_\xc3\xe36\xe9\xeb\xeb\xa3f^\r^\xaf\x97\x193*y\xf0\xa1\xfb\t\x87oP9\xbd\
\x82{\x16-\xe4\xc9\xb5\xab\xd9\xfa\xdc\xf7y\xfd\xfa\r\x99\xa4\xb55\x03\xfc\
\x9d\x90m\x07\xc7\x80\x88\x05\x9bD\xeb\xbc\xb7\xa1\x12\x11\x1a\x1a\x1a\x1aW\
\xafiX\xb1h\xf1\xbd\xc3\x188r\\\xbcx\x89Ww\xbd\xd6\xdct\xf8p\xebl\xd8|\x03N%\
\xe0\xeb\xc3\xdd\x07\x0c\x00\xc30\xde\xbfp\xfe\xa2mY\xc3\xde\x1dG\x84l6\xcb\
\xb9\xb6\xf3Y\xa0\xc5\x80p\x05\xe0\x85\xc8p\x93\xc3@\n\x02\x81\xc0\xae\xcb\
\x97\xff\xf5\xf0\xcf^\xfaE\x9dR\xaa\xe8\xce\x18\t\xa4\x1fgb\xb1\xd8\xaf\x80\
\xa7FJ\xfa\xbf4\x0f\xfc\xe8Q\x90rx\xeb\xd3\xfe7\xaa\xaf\xa0bPJM\x07\x96\x0f\
\x8d\xbb`1@\x1a\xa6+\xa56\x15\xa1\x9e\x12\x913j\xac\x1f\xa7\xe3\x94\xeax\x00\
\xee(v\x99\xaf\x00>\x1e\x86\xd7\x04\t\x0bf\x8e\xdd\x01\xd8\xde\x0c/\x8e\x96\
\xe7\x85\xbf\xa6E\xba\xc7\xec\xc0X\xf1_\x8f\xce\xab\xfb}\x05\xff\xf8\x00\x00\
\x00\x00IEND\xaeB`\x82\xf7\x0f@Q' )

def getcalc_error_barBitmap():
    return BitmapFromImage(getcalc_error_barImage())

def getcalc_error_barImage():
    stream = cStringIO.StringIO(getcalc_error_barData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getopen_smallData():
    return zlib.decompress(
'x\xda\x01\x85\x02z\xfd\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\
\x00\x00\x00\x10\x08\x06\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\
\x08\x08\x08|\x08d\x88\x00\x00\x02<IDAT8\x8d\xa5\x93?kTk\x10\x87\x9f\xdf\xec\
\xd9\xb3\x9b]7\x1b\x14VA\xb0\x89\xd1\x08\x96\x16b%rA\xb8"\x88\x16~\x02+\x0b+\
\x1b\xb5\xf7O!~\x83\xfb\x05l\x14! "\xdek\x13A\xb4\x91\xeb%6b\x10\x11%F79\xef\
\xd9\xf7\x9c\xf3\x8eE$\x08\xae\xd5\x1d\x18\x86\x19\x98\x99\x07~3rw\xfe\x8fe\
\xd3\x8a\xd7\xae\xdd<v\xfc\xf8\xd1\xdb\xc9\xd3\x1ew\x12\x90\x06;\x06\xb1\xd3\
\xc9\xab\x94\x92\xa7\xd4\xac-/\xbf\xb8s\xe9\xd2\x85\xfbS\x07\x1c9r\xf8\xecp\
\xe7\xec\xe2\xe3\x7f\x9e\xe6\x80\xe3\xf2?O\xfe\xb1\xbe\xb80\x1f$5\xa0\xddEQ\
\x9e\x03\xa6\x0f0\xb3\xde\xe2\xc2<\x87\x0e\xec\x0f\x92\x1a35\x92\x91RjK2Iff=\
\x80L\x92]?\xc1y\x19m\xe5#\xb7\x99\xbe\xef;u\xf5`\xd3\xd43\xa6-\xfcFJB\t)\t\
\x92\xac5\x01Z\x00\xd9_\xa7g.\x9f^\x0c7\x00\xc8\xc7\xc9\xfa\xed\xf4&_5\xbc1w\
\xc7$\x17 \t!\x97\x19\xc9S\xaa\xaa8\x03\x90u\xdb>\xdcf\x8f\xc1\xbc\xf5\roj\
\x1c\xc3\xddqwI`\x86\xcb\x91<\x81d)\xd5\x9d\xa9*x\x18\x8b\xba\x02`\xfd\xd3\
\x07\xd6\xfe\xbeM\x8b\x1a\xf5\x86\xb2\xfe\x1c\xea\xcf\xa1\xeeP\xbbz\xf9\xd1[\
\xd7\xaf\x9c\xc9\x00>n\xb4X\x9f\x88\x96j\x00\xa5\xe5;\xac\xbc\xbeKw8\xc7\xfe\
\xbdCZ\xb3#l\x006\xc8\xd0\x8e\x0e\x1a\xf4I\xdda\xf6\xec\xe5j\x96\x01\x84J\
\x1c\xdcU\xff\xc4\x11Q\xf73\xea\n\xaa\x1c\x8f\x05\x1e\x03\x1e\x03T\x01\xc5\
\xc0\xa46\x1e,=\xff7\x03p\xfd*\xa5W\x05\x8a\x01\xaa\x92\x14\x03\xaa\n\xbc\n\
\xa8*\xf1X\xb2\xf2n\\/-\xdd\xfb\xcf\xdc\x81i\xd7\xdc\xd4[\x9b\'\xc5V\xf3\x0f\
\x02\x8f\x01\xaf\'l\x84\xa6t\xf7d\x1f7m\xb4w\xb6\x99vO?\xa1\x97\xf8\xa4\xdc\
\xce\x89\x05\x9b\x81\t@\xd6k\xfb\x9e\xbc\xf5\x9b\x87\xaa\xe36\x05y\x81O\xfax\
\xa7\xc4c\xe0\xdd\xfb\xf2-\x80\x95\x8dV\xcbZ\xc4f\xba\x97EA\xb9\xb9A\xb91&\
\x8c\xbf\x12\xbe~\xf1\x957\xef\xe3\x93\x87\x8f.\x02\xc8\xdd\x99\x1f\x8d\x16\
\xda\xee6\x1d\x03 \xff\x11:\x00d\xd6\xfb\xf4j\xf5\xd5\x1a\xc0wq\x9c;\xb3\xcf\
G\x14\x9f\x00\x00\x00\x00IEND\xaeB`\x828\xa3%P' )

def getopen_smallBitmap():
    return BitmapFromImage(getopen_smallImage())

def getopen_smallImage():
    stream = cStringIO.StringIO(getopen_smallData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getFOMData():
    return zlib.decompress(
'x\xda\x01\x1c\x02\xe3\xfd\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\
\x10\x00\x00\x00\x10\x08\x06\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\
\x08\x08\x08\x08|\x08d\x88\x00\x00\x01\xd3IDAT8\x8d\x8d\x92=hSQ\x18\x86\x9f\
\xd3D\x12\xd3\x96\x10"\xa5\xc1\x0eR\xfc\x99\xb4\x10\x9bA\x1c\x02\x19\x1c\x1c\
\xd2A\x1c]\\\\\\D2\x14\x97N\x1d\x0c!\xab\x92br\xe1Zqw28$tl\x15\xeaR\x8b\xe9\
\xe0\xd4 \r\x05{C\xf3c^\x87k\xc2M\xbd)\xbep\x96\x97\xf7{\xce\xf7}\xe7\x18I\
\xf8\xc9\x18\xb3\x04\xc4\xce\xd8\xbb\x92Z\xc6\x10\x968\x05\x08\xbaan\xae\xae\
\xf2b}\x9dC \x02L\'\x93\xc9{\xcdfs:\x91H\xf4\xa6\\\x05\xf2\xf9\xbc\x03\\XY!`\
\x0cO%,\xdc\x0etk~^\xbf\xe4Q&\x93Q\xa1P\x90\x9fb19\xa0\x1b\x92\x98\x02\x90\
\xd8m\xb79\xde\xde\xf6\x9dfL\x8d\x06t:\xf4$\xbe\x8dF\x00\xe8t\xa8\xd86\xb9\
\xe5eBC\xaf\\.S\xaf\xd7\x01\x88F\xa3X\x96E\xad\x06\xe10\xb5a\xc6\x0b\xb0m\
\x9bg\xc5"!c\\/\x95J\x91\xcdf\x01\x08\x85\\n\xb5J\xbb\xd5\xe2\xc3\xa8%I\xa3\
\x13\x8d\xaa\xb1\xb5u\xfe\x0e\xe6\xe6t\x02\xba:\xac\x99\xf2\xce\xe78\xbc\xa9\
T\xdc\xe7\xf1\xd3\xde\x1e8\x0e]\x89\xefCo\x0c\xd0\xef\xf3zs\x93A\xb3\xe9\x0f\
(\x95\xe8\x01\x96\xd73\xa3\x8fd\xcc\x1a\xc0\xbb\xe0\xa3\xfb\xf1\xdbW\x92\x87\
\x89\xaf\x81k\xf18w\x16\x16\x00\x18\x0c\xa0\xf0r\xd0\x7f\xd0y\xfbj\x91\x83#\
\xa4\xb5\x7f:\x00\xc8\xf4?\xd6\xbf|\xd6\xe0\xe1\xf5\xa5Q1\xc0\xfe>DL\xbb\xb5\
\xc8\xc1\xd1X\x81w\x89\xc333\xa3R.\xa7S\xef\xf2\xd2i\x9d\x80\x1e\x9f\xcd\xfa\
\x02@\x97#\x11\x1d\x7f\xaa\xfe\x96vv\xf4\xde\xeejvV?@\xe1\xff\x02\xfc\x85\
\xa4K\x81\'}\x81\x8a\xc1\xe7]P\xca77\t \x89\x9f\\\xda\x10\xa8E\xcc\x9ax\xd1y\
\x00\xc1E\xc1]A`R\xe6\x0f\x99\xc7\xb3\xb6\x84\xe0t\xd5\x00\x00\x00\x00IEND\
\xaeB`\x82\xb3\xe0\xf4\xcc' )

def getFOMBitmap():
    return BitmapFromImage(getFOMImage())

def getFOMImage():
    stream = cStringIO.StringIO(getFOMData())
    return ImageFromStream(stream)

