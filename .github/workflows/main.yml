# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        C:\Miniconda\condabin\conda.bat env update --file genx\windows_build\conda.yml --name base
        C:\Miniconda\condabin\conda.bat init powershell
    - name: Build with pyinstaller
      run: |
        # Activate the base environment
        C:\Miniconda\condabin\conda.bat activate base
        cd genx
        # C:\Miniconda\condabin\conda.bat install flake8
        # stop the build if there are Python syntax errors or undefined names
        pyinstaller genx.spec
        
  build-ubuntu:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        apt install python3 python3-matplotlib python3-scipy python3-wxgtk4.0 python3-numba nvidia-cuda-toolkit alien rpm build-essential
    - name: Build binary package
      run: |
        cd genx
        # C:\Miniconda\condabin\conda.bat install flake8
        # stop the build if there are Python syntax errors or undefined names
        python3 setup.py bdist

#  build-and-push-image:
#    runs-on: ubuntu-latest
#    needs: build-ubuntu
#    steps:
#    - name: Checkout
#      uses: actions/checkout@v2
#    - name: Build container image
#      uses: docker/build-push-action@v1
#      with:
#        username: ${{ github.actor }}
#        password: ${{ secrets.GITHUB_TOKEN }}
#        registry: docker.pkg.github.com
#        repository: ${{ github.repository }}/octo-image
#        tag_with_sha: true
#        tag_with_ref: true
